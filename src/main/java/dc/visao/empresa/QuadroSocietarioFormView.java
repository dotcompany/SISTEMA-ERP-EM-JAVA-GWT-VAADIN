package dc.visao.empresa;


import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.empresa.QuadroSocietarioFormController;
import dc.entidade.empresa.QuadroSocietario;
import dc.visao.framework.util.ComponentUtil;

@SuppressWarnings("serial")
public class QuadroSocietarioFormView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout fields;

	@AutoGenerated
	private PopupDateField dataRegistro;
	
	TextField txtCapitalSocial,txtValorQuota,txtQuantidadeCotas;
	
	QuadroSocietarioFormController controller;

	QuadroSocietario currentBean;

	public QuadroSocietarioFormView(QuadroSocietarioFormController controller) {
		this.controller = controller;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private GridLayout buildFields() {
		// common part: create layout
		fields = new GridLayout(6, 4);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);

		// calDataRequisicao
		dataRegistro = new PopupDateField();
		dataRegistro.setCaption("Data Registro");
		dataRegistro.setRequired(true);
		dataRegistro.setImmediate(false);
		
		
		txtCapitalSocial = ComponentUtil.buildCurrencyField("Capital Social");
		txtCapitalSocial.setRequired(true);
		
		txtValorQuota = ComponentUtil.buildCurrencyField("Valor Quota");
		txtValorQuota.setRequired(true);
		
		txtQuantidadeCotas = ComponentUtil.buildTextField("Quantidade Cotas");
		txtQuantidadeCotas.setRequired(true);
		fields.addComponent(dataRegistro, 0, 0);
		fields.addComponent(txtCapitalSocial, 1, 0);
		fields.addComponent(txtValorQuota, 2, 0);
		fields.addComponent(txtQuantidadeCotas, 3, 0);

		return fields;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
				setHeight("70.0%");

		// fields
		fields = buildFields();
		mainLayout.addComponent(fields);
       
		return mainLayout;
	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(VerticalLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public GridLayout getFields() {
		return fields;
	}

	public void setFields(GridLayout fields) {
		this.fields = fields;
	}

	public PopupDateField getDataRegistro() {
		return dataRegistro;
	}

	public void setDataRegistro(PopupDateField dataRegistro) {
		this.dataRegistro = dataRegistro;
	}

	public QuadroSocietarioFormController getController() {
		return controller;
	}

	public void setController(QuadroSocietarioFormController controller) {
		this.controller = controller;
	}

	public QuadroSocietario getCurrentBean() {
		return currentBean;
	}

	public void setCurrentBean(QuadroSocietario currentBean) {
		this.currentBean = currentBean;
	}

	public TextField getTxtCapitalSocial() {
		return txtCapitalSocial;
	}

	public void setTxtCapitalSocial(TextField txtCapitalSocial) {
		this.txtCapitalSocial = txtCapitalSocial;
	}

	public TextField getTxtValorQuota() {
		return txtValorQuota;
	}

	public void setTxtValorQuota(TextField txtValorQuota) {
		this.txtValorQuota = txtValorQuota;
	}

	public TextField getTxtQuantidadeCotas() {
		return txtQuantidadeCotas;
	}

	public void setTxtQuantidadeCotas(TextField txtQuantidadeCotas) {
		this.txtQuantidadeCotas = txtQuantidadeCotas;
	}

	}

