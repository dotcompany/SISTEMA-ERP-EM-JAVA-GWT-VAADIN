package dc.visao.tabelas;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

public class SalarioMinimoFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;
	@AutoGenerated
	private PopupDateField dtDou;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private TextField txtNormaLegal;
	@AutoGenerated
	private TextField txtValorHora;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private TextField txtValorDiario;
	@AutoGenerated
	private TextField txtValorMensal;
	@AutoGenerated
	private PopupDateField dataVigencia;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public SalarioMinimoFormView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		mainLayout.setRows(3);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1, 0, 0);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2, 0, 1);
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3, 0, 2);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// dataVigencia
		dataVigencia = new PopupDateField();
		dataVigencia.setCaption("Vigência");
		dataVigencia.setImmediate(false);
		dataVigencia.setWidth("156px");
		dataVigencia.setHeight("-1px");
		horizontalLayout_1.addComponent(dataVigencia);
		
		// txtValorMensal
		txtValorMensal = new TextField();
		txtValorMensal.setCaption("Valor Mensal");
		txtValorMensal.setImmediate(false);
		txtValorMensal.setWidth("154px");
		txtValorMensal.setHeight("-1px");
		horizontalLayout_1.addComponent(txtValorMensal);
		
		// txtValorDiario
		txtValorDiario = new TextField();
		txtValorDiario.setCaption("Valor Diário");
		txtValorDiario.setImmediate(false);
		txtValorDiario.setWidth("174px");
		txtValorDiario.setHeight("-1px");
		horizontalLayout_1.addComponent(txtValorDiario);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		horizontalLayout_2.setSpacing(true);
		
		// txtValorHora
		txtValorHora = new TextField();
		txtValorHora.setCaption("Valor Hora");
		txtValorHora.setImmediate(false);
		txtValorHora.setWidth("156px");
		txtValorHora.setHeight("-1px");
		horizontalLayout_2.addComponent(txtValorHora);
		
		// txtNormaLegal
		txtNormaLegal = new TextField();
		txtNormaLegal.setCaption("Normal Legal");
		txtNormaLegal.setImmediate(false);
		txtNormaLegal.setWidth("334px");
		txtNormaLegal.setHeight("-1px");
		horizontalLayout_2.addComponent(txtNormaLegal);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("-1px");
		horizontalLayout_3.setHeight("-1px");
		horizontalLayout_3.setMargin(false);
		horizontalLayout_3.setSpacing(true);
		
		// dtDou
		dtDou = new PopupDateField();
		dtDou.setCaption("Dou");
		dtDou.setImmediate(false);
		dtDou.setWidth("156px");
		dtDou.setHeight("-1px");
		horizontalLayout_3.addComponent(dtDou);
		
		return horizontalLayout_3;
	}

	public GridLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(GridLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public HorizontalLayout getHorizontalLayout_3() {
		return horizontalLayout_3;
	}

	public void setHorizontalLayout_3(HorizontalLayout horizontalLayout_3) {
		this.horizontalLayout_3 = horizontalLayout_3;
	}

	public PopupDateField getDtDou() {
		return dtDou;
	}

	public void setDtDou(PopupDateField dtDou) {
		this.dtDou = dtDou;
	}

	public HorizontalLayout getHorizontalLayout_2() {
		return horizontalLayout_2;
	}

	public void setHorizontalLayout_2(HorizontalLayout horizontalLayout_2) {
		this.horizontalLayout_2 = horizontalLayout_2;
	}

	public TextField getTxtNormaLegal() {
		return txtNormaLegal;
	}

	public void setTxtNormaLegal(TextField txtNormaLegal) {
		this.txtNormaLegal = txtNormaLegal;
	}

	public TextField getTxtValorHora() {
		return txtValorHora;
	}

	public void setTxtValorHora(TextField txtValorHora) {
		this.txtValorHora = txtValorHora;
	}

	public HorizontalLayout getHorizontalLayout_1() {
		return horizontalLayout_1;
	}

	public void setHorizontalLayout_1(HorizontalLayout horizontalLayout_1) {
		this.horizontalLayout_1 = horizontalLayout_1;
	}

	public TextField getTxtValorDiario() {
		return txtValorDiario;
	}

	public void setTxtValorDiario(TextField txtValorDiario) {
		this.txtValorDiario = txtValorDiario;
	}

	public TextField getTxtValorMensal() {
		return txtValorMensal;
	}

	public void setTxtValorMensal(TextField txtValorMensal) {
		this.txtValorMensal = txtValorMensal;
	}

	public PopupDateField getDataVigencia() {
		return dataVigencia;
	}

	public void setDataVigencia(PopupDateField dataVigencia) {
		this.dataVigencia = dataVigencia;
	}
	
}
