package dc.visao.geral.pessoal;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

import dc.controller.geral.pessoal.ClienteFormController;
import dc.entidade.contabilidade.ContabilContaEntity;
import dc.entidade.geral.pessoal.AtividadeForCliEntity;
import dc.entidade.geral.pessoal.PessoaEntity;
import dc.entidade.geral.pessoal.SituacaoForCliEntity;
import dc.entidade.tributario.OperacaoFiscalEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneCombo;

public class ClienteFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private GridLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_6;

	@AutoGenerated
	private TextField tfObservacao;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_5;

	@AutoGenerated
	private TextField tfLimiteCredito;

	@AutoGenerated
	private TextField tfTaxaDesconto;

	@AutoGenerated
	private ComboBox cbFormaDesconto;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;

	@AutoGenerated
	private ComboBox cbTipoFrete;

	@AutoGenerated
	private ComboBox cbIndicadorPreco;

	@AutoGenerated
	private ComboBox cbGerarFinanceiro;

	@AutoGenerated
	private TextField tfContaTomador;

	@AutoGenerated
	private PopupDateField pdfDesde;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	private ManyToOneCombo<PessoaEntity> mocPessoa;

	private ManyToOneCombo<SituacaoForCliEntity> mocSituacao;

	private ManyToOneCombo<AtividadeForCliEntity> mocAtividade;

	private ManyToOneCombo<ContabilContaEntity> mocContaContabil;

	private ManyToOneCombo<OperacaoFiscalEntity> mocOperacaoFiscal;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */

	private ClienteFormController controller;

	public ClienteFormView(ClienteFormController clienteFormController) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		this.controller = clienteFormController;
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		mainLayout.setRows(6);

		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");

		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1, 0, 0);

		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2, 0, 1);

		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3, 0, 2);

		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		mainLayout.addComponent(horizontalLayout_4, 0, 3);

		// horizontalLayout_5
		horizontalLayout_5 = buildHorizontalLayout_5();
		mainLayout.addComponent(horizontalLayout_5, 0, 4);

		// horizontalLayout_6
		horizontalLayout_6 = buildHorizontalLayout_6();
		mainLayout.addComponent(horizontalLayout_6, 0, 5);

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);

		// mocPessoa
		mocPessoa = new ManyToOneCombo<>();
		mocPessoa.setCaption("Pessoa");
		mocPessoa.setImmediate(false);
		mocPessoa.setWidth("380px");
		mocPessoa.setHeight("-1px");
		horizontalLayout_1.addComponent(mocPessoa);

		// mocSituacao
		mocSituacao = new ManyToOneCombo<>();
		mocSituacao.setCaption("Situação");
		mocSituacao.setImmediate(false);
		mocSituacao.setWidth("394px");
		mocSituacao.setHeight("-1px");
		horizontalLayout_1.addComponent(mocSituacao);

		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		horizontalLayout_2.setSpacing(true);

		// mocAtividade
		mocAtividade = new ManyToOneCombo<>();
		mocAtividade.setCaption("Atividade");
		mocAtividade.setImmediate(false);
		mocAtividade.setWidth("383px");
		mocAtividade.setHeight("-1px");
		horizontalLayout_2.addComponent(mocAtividade);

		// mocContaContabil
		mocContaContabil = new ManyToOneCombo<>();
		mocContaContabil.setCaption("Conta contábil");
		mocContaContabil.setImmediate(false);
		mocContaContabil.setWidth("391px");
		mocContaContabil.setHeight("-1px");
		horizontalLayout_2.addComponent(mocContaContabil);

		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("-1px");
		horizontalLayout_3.setHeight("-1px");
		horizontalLayout_3.setMargin(false);
		horizontalLayout_3.setSpacing(true);

		// mocOperacaoFiscal
		mocOperacaoFiscal = new ManyToOneCombo<>();
		mocOperacaoFiscal.setCaption("Operação fiscal");
		mocOperacaoFiscal.setImmediate(false);
		mocOperacaoFiscal.setWidth("780px");
		mocOperacaoFiscal.setHeight("-1px");
		horizontalLayout_3.addComponent(mocOperacaoFiscal);

		return horizontalLayout_3;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setImmediate(false);
		horizontalLayout_4.setWidth("-1px");
		horizontalLayout_4.setHeight("-1px");
		horizontalLayout_4.setMargin(false);
		horizontalLayout_4.setSpacing(true);

		// pdfDesde
		pdfDesde = new PopupDateField();
		pdfDesde.setCaption("Desde");
		pdfDesde.setImmediate(false);
		pdfDesde.setWidth("100px");
		pdfDesde.setHeight("-1px");
		horizontalLayout_4.addComponent(pdfDesde);

		// tfContaTomador
		tfContaTomador = new TextField();
		tfContaTomador.setCaption("Conta do tomador");
		tfContaTomador.setImmediate(false);
		tfContaTomador.setWidth("193px");
		tfContaTomador.setHeight("-1px");
		horizontalLayout_4.addComponent(tfContaTomador);

		// cbGerarFinanceiro
		cbGerarFinanceiro = new ComboBox();
		cbGerarFinanceiro.setCaption("Gerar financeiro?");
		cbGerarFinanceiro.setImmediate(false);
		cbGerarFinanceiro.setWidth("147px");
		cbGerarFinanceiro.setHeight("-1px");
		horizontalLayout_4.addComponent(cbGerarFinanceiro);

		// cbIndicadorPreco
		cbIndicadorPreco = new ComboBox();
		cbIndicadorPreco.setCaption("Indicador de preço");
		cbIndicadorPreco.setImmediate(false);
		cbIndicadorPreco.setWidth("-1px");
		cbIndicadorPreco.setHeight("-1px");
		horizontalLayout_4.addComponent(cbIndicadorPreco);

		// cbTipoFrete
		cbTipoFrete = new ComboBox();
		cbTipoFrete.setCaption("Tipo de frete");
		cbTipoFrete.setImmediate(false);
		cbTipoFrete.setWidth("154px");
		cbTipoFrete.setHeight("-1px");
		horizontalLayout_4.addComponent(cbTipoFrete);

		return horizontalLayout_4;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_5() {
		// common part: create layout
		horizontalLayout_5 = new HorizontalLayout();
		horizontalLayout_5.setImmediate(false);
		horizontalLayout_5.setWidth("-1px");
		horizontalLayout_5.setHeight("-1px");
		horizontalLayout_5.setMargin(false);
		horizontalLayout_5.setSpacing(true);

		// cbFormaDesconto
		cbFormaDesconto = new ComboBox();
		cbFormaDesconto.setCaption("Forma de desconto");
		cbFormaDesconto.setImmediate(false);
		cbFormaDesconto.setWidth("383px");
		cbFormaDesconto.setHeight("-1px");
		horizontalLayout_5.addComponent(cbFormaDesconto);

		// tfTaxaDesconto
		tfTaxaDesconto = new TextField();
		tfTaxaDesconto.setCaption("Taxa de desconto");
		tfTaxaDesconto.setImmediate(false);
		tfTaxaDesconto.setWidth("191px");
		tfTaxaDesconto.setHeight("-1px");
		horizontalLayout_5.addComponent(tfTaxaDesconto);

		// tfLimiteCredito
		tfLimiteCredito = new TextField();
		tfLimiteCredito.setCaption("Limite de crédito");
		tfLimiteCredito.setImmediate(false);
		tfLimiteCredito.setWidth("194px");
		tfLimiteCredito.setHeight("-1px");
		horizontalLayout_5.addComponent(tfLimiteCredito);

		return horizontalLayout_5;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_6() {
		// common part: create layout
		horizontalLayout_6 = new HorizontalLayout();
		horizontalLayout_6.setImmediate(false);
		horizontalLayout_6.setWidth("-1px");
		horizontalLayout_6.setHeight("-1px");
		horizontalLayout_6.setMargin(false);
		horizontalLayout_6.setSpacing(true);

		// tfObservacao
		tfObservacao = new TextField();
		tfObservacao.setCaption("Observação");
		tfObservacao.setImmediate(false);
		tfObservacao.setWidth("780px");
		tfObservacao.setHeight("-1px");
		horizontalLayout_6.addComponent(tfObservacao);

		return horizontalLayout_6;
	}

	/*
	 * public void InitCbs() {
	 * 
	 * 
	 * cmbGerarFinanceiro.addItem(GerarFinanceiroType.SIM.toString());
	 * cmbGerarFinanceiro.addItem(GerarFinanceiroType.NAO.toString());
	 * 
	 * cmbIndicadorPreco.addItem(IndicadorPrecoType.TABELA.toString());
	 * cmbIndicadorPreco.addItem(IndicadorPrecoType.ULTIMOPEDIDO.toString());
	 * 
	 * cmbTipoFrete.addItem(TipoFreteType.EMITENTE.toString());
	 * cmbTipoFrete.addItem(TipoFreteType.DESTINATARIO.toString());
	 * cmbTipoFrete.addItem(TipoFreteType.SEMFRETE.toString());
	 * cmbTipoFrete.addItem(TipoFreteType.TERCEIROS.toString());
	 * 
	 * cmbFormaDesconto.addItem(FormaDescontoType.PRODUTO.toString());
	 * cmbFormaDesconto.addItem(FormaDescontoType.FIMPEDIDO.toString());
	 * 
	 * }
	 * 
	 * public String getCbGerarFinanceiro() { String cbvalue = new String(); if
	 * (cmbGerarFinanceiro.getValue() == "Sim") { cbvalue = "S"; } else if
	 * (cmbGerarFinanceiro.getValue() == "Nao") { cbvalue = "N"; } return
	 * cbvalue; }
	 * 
	 * public void setCbGerarFinanceiro(String cbGerarFinanceiro) { if
	 * (cbGerarFinanceiro.equalsIgnoreCase("S")) {
	 * this.cmbGerarFinanceiro.setValue("Sim"); } else if
	 * (cbGerarFinanceiro.equalsIgnoreCase("N")) {
	 * this.cmbGerarFinanceiro.setValue("Nao"); } }
	 * 
	 * public String getCbIndicadorPreco() { String cbvalue = new String(); if
	 * (cmbIndicadorPreco.getValue() == "Tabela") { cbvalue = "T"; } else if
	 * (cmbIndicadorPreco.getValue() == "Último Pedido") { cbvalue = "P"; }
	 * return cbvalue; }
	 * 
	 * public void setCbIndicadorPreco(String cbIndicadorPreco) { if
	 * (cbIndicadorPreco.equalsIgnoreCase("T")) {
	 * this.cmbIndicadorPreco.setValue("Tabela"); } else if
	 * (cbIndicadorPreco.equalsIgnoreCase("P")) {
	 * this.cmbIndicadorPreco.setValue("Último Pedido"); } }
	 * 
	 * public String getCbTipoFrete() { String cbvalue = new String(); if
	 * (cmbTipoFrete.getValue() == "Emitente") { cbvalue = "E"; } else if
	 * (cmbTipoFrete.getValue() == "Destinatários") { cbvalue = "D"; } else if
	 * (cmbTipoFrete.getValue() == "Sem Frete") {
	 * 
	 * cbvalue = "S"; } else if (cmbTipoFrete.getValue() == "Terceiros") {
	 * 
	 * cbvalue = "T"; } return cbvalue; }
	 * 
	 * public void setCbTipoFrete(String cbTipoFrete) { if
	 * (cbTipoFrete.equalsIgnoreCase("E")) {
	 * this.cmbTipoFrete.setValue("Emitente"); } else if
	 * (cbTipoFrete.equalsIgnoreCase("D")) {
	 * this.cmbTipoFrete.setValue("Destinatários"); } else if
	 * (cbTipoFrete.equalsIgnoreCase("S")) {
	 * 
	 * this.cmbTipoFrete.setValue("Sem Frete"); } else if
	 * (cbTipoFrete.equalsIgnoreCase("T")) {
	 * 
	 * this.cmbTipoFrete.setValue("Terceiros"); } }
	 * 
	 * public String getCbFormaDesconto() { String cbvalue = new String(); if
	 * (cmbFormaDesconto.getValue() == "Produto") { cbvalue = "P"; } else if
	 * (cmbFormaDesconto.getValue() == "Fim do Pedido") { cbvalue = "F"; }
	 * return cbvalue; }
	 * 
	 * public void setCbFormaDesconto(String cbFormaDesconto) { if
	 * (cbFormaDesconto.equalsIgnoreCase("P")) {
	 * this.cmbFormaDesconto.setValue("Produto"); } else if
	 * (cbFormaDesconto.equalsIgnoreCase("F")) {
	 * this.cmbFormaDesconto.setValue("Fim do pedido"); } }
	 */

	public GridLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(GridLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public HorizontalLayout getHorizontalLayout_6() {
		return horizontalLayout_6;
	}

	public void setHorizontalLayout_6(HorizontalLayout horizontalLayout_6) {
		this.horizontalLayout_6 = horizontalLayout_6;
	}

	public TextField getTfObservacao() {
		return tfObservacao;
	}

	public void setTfObservacao(TextField tfObservacao) {
		this.tfObservacao = tfObservacao;
	}

	public HorizontalLayout getHorizontalLayout_5() {
		return horizontalLayout_5;
	}

	public void setHorizontalLayout_5(HorizontalLayout horizontalLayout_5) {
		this.horizontalLayout_5 = horizontalLayout_5;
	}

	public TextField getTfLimiteCredito() {
		return tfLimiteCredito;
	}

	public void setTfLimiteCredito(TextField tfLimiteCredito) {
		this.tfLimiteCredito = tfLimiteCredito;
	}

	public TextField getTfTaxaDesconto() {
		return tfTaxaDesconto;
	}

	public void setTfTaxaDesconto(TextField tfTaxaDesconto) {
		this.tfTaxaDesconto = tfTaxaDesconto;
	}

	public HorizontalLayout getHorizontalLayout_4() {
		return horizontalLayout_4;
	}

	public void setHorizontalLayout_4(HorizontalLayout horizontalLayout_4) {
		this.horizontalLayout_4 = horizontalLayout_4;
	}

	public TextField getTfContaTomador() {
		return tfContaTomador;
	}

	public void setTfContaTomador(TextField tfContaTomador) {
		this.tfContaTomador = tfContaTomador;
	}

	public PopupDateField getPdfDesde() {
		return pdfDesde;
	}

	public void setPdfDesde(PopupDateField pdfDesde) {
		this.pdfDesde = pdfDesde;
	}

	public HorizontalLayout getHorizontalLayout_3() {
		return horizontalLayout_3;
	}

	public void setHorizontalLayout_3(HorizontalLayout horizontalLayout_3) {
		this.horizontalLayout_3 = horizontalLayout_3;
	}

	public HorizontalLayout getHorizontalLayout_2() {
		return horizontalLayout_2;
	}

	public void setHorizontalLayout_2(HorizontalLayout horizontalLayout_2) {
		this.horizontalLayout_2 = horizontalLayout_2;
	}

	public HorizontalLayout getHorizontalLayout_1() {
		return horizontalLayout_1;
	}

	public void setHorizontalLayout_1(HorizontalLayout horizontalLayout_1) {
		this.horizontalLayout_1 = horizontalLayout_1;
	}

	public ComboBox getCbFormaDesconto() {
		return cbFormaDesconto;
	}

	public void setCbFormaDesconto(ComboBox cbFormaDesconto) {
		this.cbFormaDesconto = cbFormaDesconto;
	}

	public ComboBox getCbTipoFrete() {
		return cbTipoFrete;
	}

	public void setCbTipoFrete(ComboBox cbTipoFrete) {
		this.cbTipoFrete = cbTipoFrete;
	}

	public ComboBox getCbIndicadorPreco() {
		return cbIndicadorPreco;
	}

	public void setCbIndicadorPreco(ComboBox cbIndicadorPreco) {
		this.cbIndicadorPreco = cbIndicadorPreco;
	}

	public ComboBox getCbGerarFinanceiro() {
		return cbGerarFinanceiro;
	}

	public void setCbGerarFinanceiro(ComboBox cbGerarFinanceiro) {
		this.cbGerarFinanceiro = cbGerarFinanceiro;
	}

	public ManyToOneCombo<PessoaEntity> getMocPessoa() {
		return mocPessoa;
	}

	public void setMocPessoa(ManyToOneCombo<PessoaEntity> mocPessoa) {
		this.mocPessoa = mocPessoa;
	}

	public ManyToOneCombo<SituacaoForCliEntity> getMocSituacao() {
		return mocSituacao;
	}

	public void setMocSituacao(ManyToOneCombo<SituacaoForCliEntity> mocSituacao) {
		this.mocSituacao = mocSituacao;
	}

	public ManyToOneCombo<AtividadeForCliEntity> getMocAtividade() {
		return mocAtividade;
	}

	public void setMocAtividade(
			ManyToOneCombo<AtividadeForCliEntity> mocAtividade) {
		this.mocAtividade = mocAtividade;
	}

	public ManyToOneCombo<ContabilContaEntity> getMocContaContabil() {
		return mocContaContabil;
	}

	public void setMocContaContabil(
			ManyToOneCombo<ContabilContaEntity> mocContaContabil) {
		this.mocContaContabil = mocContaContabil;
	}

	public ManyToOneCombo<OperacaoFiscalEntity> getMocOperacaoFiscal() {
		return mocOperacaoFiscal;
	}

	public void setMocOperacaoFiscal(
			ManyToOneCombo<OperacaoFiscalEntity> mocOperacaoFiscal) {
		this.mocOperacaoFiscal = mocOperacaoFiscal;
	}

}