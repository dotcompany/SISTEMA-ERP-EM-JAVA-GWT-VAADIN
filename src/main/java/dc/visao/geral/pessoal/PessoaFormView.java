package dc.visao.geral.pessoal;

import java.util.List;

import org.vaadin.addons.maskedtextfield.MaskedTextField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.geral.pessoal.PessoaFormController;
import dc.entidade.contabilidade.ContabilContaEntity;
import dc.entidade.geral.PessoaContatoEntity;
import dc.entidade.geral.PessoaEnderecoEntity;
import dc.entidade.geral.UfEntity;
import dc.entidade.geral.pessoal.AtividadeForCliEntity;
import dc.entidade.geral.pessoal.EstadoCivilEntity;
import dc.entidade.geral.pessoal.SituacaoForCliEntity;
import dc.entidade.tributario.OperacaoFiscalEntity;
import dc.visao.framework.component.IntegerConverter;
import dc.visao.framework.component.SubFormComponent;
import dc.visao.framework.component.manytoonecombo.ManyToOneCombo;
import dc.visao.framework.util.ComponentUtil;

public class PessoaFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout glGeral;

	@AutoGenerated
	private TabSheet tsGeral;

	@AutoGenerated
	private Panel plGeralPessoaFisica;

	@AutoGenerated
	private VerticalLayout vlGeralPessoaFisica;

	@AutoGenerated
	private GridLayout glGeralPessoaFisica;

	@AutoGenerated
	private Panel plGeralPessoaJuridica;

	@AutoGenerated
	private VerticalLayout vlGeralPessoaJuridica;

	@AutoGenerated
	private GridLayout glGeralPessoaJuridica;

	@AutoGenerated
	private VerticalLayout vlPessoaContato;

	@AutoGenerated
	private Panel plPessoaContato;

	@AutoGenerated
	private VerticalLayout vlPessoaEndereco;

	@AutoGenerated
	private Panel plPessoaEndereco;

	/**
	 * CLIENTE
	 */

	@AutoGenerated
	private VerticalLayout vlCliente;

	@AutoGenerated
	private Panel plCliente;

	@AutoGenerated
	private GridLayout glCliente;

	@AutoGenerated
	private TextArea taClienteObservacao;

	@AutoGenerated
	private TextField tfClienteLimiteCredito;

	@AutoGenerated
	private TextField tfClienteTaxaDesconto;

	@AutoGenerated
	private ComboBox cbClienteFormaDesconto;

	@AutoGenerated
	private ComboBox cbClienteTipoFrete;

	@AutoGenerated
	private ComboBox cbClienteIndicadorPreco;

	@AutoGenerated
	private ComboBox cbClienteGerarFinanceiro;

	@AutoGenerated
	private TextField tfClienteContaTomador;

	@AutoGenerated
	private PopupDateField pdfClienteDesde;

	@AutoGenerated
	private ManyToOneCombo<SituacaoForCliEntity> mocClienteSituacao;

	@AutoGenerated
	private ManyToOneCombo<AtividadeForCliEntity> mocClienteAtividade;

	@AutoGenerated
	private ManyToOneCombo<ContabilContaEntity> mocClienteContaContabil;

	@AutoGenerated
	private ManyToOneCombo<OperacaoFiscalEntity> mocClienteOperacaoFiscal;

	/**
	 * COLABORADOR
	 */

	@AutoGenerated
	private VerticalLayout vlColaborador;

	@AutoGenerated
	private Panel plColaborador;

	@AutoGenerated
	private GridLayout glColaborador;

	/**
	 * FORNECEDOR
	 */

	@AutoGenerated
	private VerticalLayout vlFornecedor;

	@AutoGenerated
	private Panel plFornecedor;

	@AutoGenerated
	private GridLayout glFornecedor;

	@AutoGenerated
	private ManyToOneCombo<SituacaoForCliEntity> mocFornecedorSituacaoForCli;

	@AutoGenerated
	private ManyToOneCombo<AtividadeForCliEntity> mocFornecedorAtividadeForCli;

	@AutoGenerated
	private ManyToOneCombo<ContabilContaEntity> mocFornecedorContabilConta;

	@AutoGenerated
	private PopupDateField pdfFornecedorDesde;

	@AutoGenerated
	private TextField tfFornecedorContaRemetente;

	@AutoGenerated
	private ComboBox cbFornecedorGeraFaturamento;

	@AutoGenerated
	private ComboBox cbFornecedorOptanteSimples;

	@AutoGenerated
	private ComboBox cbFornecedorLocalizacao;

	@AutoGenerated
	private ComboBox cbFornecedorSofreRetencao;

	@AutoGenerated
	private TextField tfFornecedorPrazoMedioEntrega;

	@AutoGenerated
	private TextField tfFornecedorNumDiasPrimeiroVenc;

	@AutoGenerated
	private TextField tfFornecedorNumDiasIntervalo;

	@AutoGenerated
	private TextField tfFornecedorQuantidadeParcelas;

	@AutoGenerated
	private TextField tfFornecedorChequeNominalA;

	@AutoGenerated
	private TextArea taFornecedorObservacao;

	/**
	 * TRANSPORTADORA
	 */

	@AutoGenerated
	private VerticalLayout vlTransportadora;

	@AutoGenerated
	private Panel plTransportadora;

	@AutoGenerated
	private GridLayout glTransportadora;

	@AutoGenerated
	private TextArea taTransportadoraObservacao;

	@AutoGenerated
	private ManyToOneCombo<ContabilContaEntity> mocTransportadoraContabilConta;

	/**
	 * 
	 */

	@AutoGenerated
	private ComboBox cbTipoPessoa;

	@AutoGenerated
	private ComboBox cbRaca;

	@AutoGenerated
	private ComboBox cbTipoSanguineo;

	@AutoGenerated
	private ComboBox cbTipoRegime;

	@AutoGenerated
	private ComboBox cbCrt;

	@AutoGenerated
	private ComboBox cbCategoriaReservista;

	@AutoGenerated
	private ComboBox cbCategoriaCnh;

	@AutoGenerated
	private TextField tfNome;

	@AutoGenerated
	private TextField tfEmail;

	@AutoGenerated
	private TextField tfSite;

	@AutoGenerated
	private MaskedTextField mtfCpf;

	@AutoGenerated
	private PopupDateField pdfDataNascimento;

	@AutoGenerated
	private TextField tfNaturalidade;

	@AutoGenerated
	private TextField tfNacionalidade;

	@AutoGenerated
	private TextField tfNomePai;

	@AutoGenerated
	private TextField tfNomeMae;

	@AutoGenerated
	private TextField tfFantasia;

	@AutoGenerated
	private MaskedTextField mtfCnpj;

	@AutoGenerated
	private TextField tfInscricaoEstadual;

	@AutoGenerated
	private TextField tfInscricaoMunicipal;

	@AutoGenerated
	private PopupDateField pdfDataConstituicao;

	@AutoGenerated
	private TextField tfSuframa;

	@AutoGenerated
	private TextField tfNumeroRg;

	@AutoGenerated
	private TextField tfEmissorRg;

	@AutoGenerated
	private TextField tfOrgaoEmissor;

	@AutoGenerated
	private TextField tfCnh;

	@AutoGenerated
	private TextField tfTituloEleitor;

	@AutoGenerated
	private TextField tfTituloZona;

	@AutoGenerated
	private TextField tfTituloSecao;

	@AutoGenerated
	private PopupDateField pdfDataCnhEmissao;

	@AutoGenerated
	private TextField tfNumeroReservista;

	@AutoGenerated
	private PopupDateField pdfDataEmissaoRg;

	@AutoGenerated
	private OptionGroup ogSexo;

	// @AutoGenerated
	// private OptionGroup ogCategoriaPessoa;

	@AutoGenerated
	private CheckBox ckCliente;

	@AutoGenerated
	private CheckBox ckFornecedor;

	@AutoGenerated
	private CheckBox ckColaborador;

	@AutoGenerated
	private CheckBox ckTransportadora;

	@AutoGenerated
	private ManyToOneCombo<EstadoCivilEntity> mocEstadoCivil;

	private SubFormComponent<PessoaContatoEntity, Integer> sfPessoaContato;

	private SubFormComponent<PessoaEnderecoEntity, Integer> sfPessoaEndereco;

	private PessoaFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public PessoaFormView(PessoaFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		this.controller = controller;
	}

	public TabSheet getTsGeral() {
		return tsGeral;
	}

	public void setTsGeral(TabSheet tsGeral) {
		this.tsGeral = tsGeral;
	}

	public ComboBox getCbTipoPessoa() {
		return cbTipoPessoa;
	}

	public void setCbTipoPessoa(ComboBox cbTipoPessoa) {
		this.cbTipoPessoa = cbTipoPessoa;
	}

	public ComboBox getCbRaca() {
		return cbRaca;
	}

	public void setCbRaca(ComboBox cbRaca) {
		this.cbRaca = cbRaca;
	}

	public ComboBox getCbTipoSanguineo() {
		return cbTipoSanguineo;
	}

	public void setCbTipoSanguineo(ComboBox cbTipoSanguineo) {
		this.cbTipoSanguineo = cbTipoSanguineo;
	}

	public ComboBox getCbTipoRegime() {
		return cbTipoRegime;
	}

	public void setCbTipoRegime(ComboBox cbTipoRegime) {
		this.cbTipoRegime = cbTipoRegime;
	}

	public ComboBox getCbCrt() {
		return cbCrt;
	}

	public void setCbCrt(ComboBox cbCrt) {
		this.cbCrt = cbCrt;
	}

	public ComboBox getCbCategoriaReservista() {
		return cbCategoriaReservista;
	}

	public void setCbCategoriaReservista(ComboBox cbCategoriaReservista) {
		this.cbCategoriaReservista = cbCategoriaReservista;
	}

	public ComboBox getCbCategoriaCnh() {
		return cbCategoriaCnh;
	}

	public void setCbCategoriaCnh(ComboBox cbCategoriaCnh) {
		this.cbCategoriaCnh = cbCategoriaCnh;
	}

	public TextField getTfNome() {
		return tfNome;
	}

	public void setTfNome(TextField tfNome) {
		this.tfNome = tfNome;
	}

	public TextField getTfEmail() {
		return tfEmail;
	}

	public void setTfEmail(TextField tfEmail) {
		this.tfEmail = tfEmail;
	}

	public TextField getTfSite() {
		return tfSite;
	}

	public void setTfSite(TextField tfSite) {
		this.tfSite = tfSite;
	}

	public MaskedTextField getMtfCpf() {
		return mtfCpf;
	}

	public void setMtfCpf(MaskedTextField mtfCpf) {
		this.mtfCpf = mtfCpf;
	}

	public PopupDateField getPdfDataNascimento() {
		return pdfDataNascimento;
	}

	public void setPdfDataNascimento(PopupDateField pdfDataNascimento) {
		this.pdfDataNascimento = pdfDataNascimento;
	}

	public TextField getTfNaturalidade() {
		return tfNaturalidade;
	}

	public void setTfNaturalidade(TextField tfNaturalidade) {
		this.tfNaturalidade = tfNaturalidade;
	}

	public TextField getTfNacionalidade() {
		return tfNacionalidade;
	}

	public void setTfNacionalidade(TextField tfNacionalidade) {
		this.tfNacionalidade = tfNacionalidade;
	}

	public TextField getTfNomePai() {
		return tfNomePai;
	}

	public void setTfNomePai(TextField tfNomePai) {
		this.tfNomePai = tfNomePai;
	}

	public TextField getTfNomeMae() {
		return tfNomeMae;
	}

	public void setTfNomeMae(TextField tfNomeMae) {
		this.tfNomeMae = tfNomeMae;
	}

	public TextField getTfFantasia() {
		return tfFantasia;
	}

	public void setTfFantasia(TextField tfFantasia) {
		this.tfFantasia = tfFantasia;
	}

	public MaskedTextField getMtfCnpj() {
		return mtfCnpj;
	}

	public void setMtfCnpj(MaskedTextField mtfCnpj) {
		this.mtfCnpj = mtfCnpj;
	}

	public TextField getTfInscricaoEstadual() {
		return tfInscricaoEstadual;
	}

	public void setTfInscricaoEstadual(TextField tfInscricaoEstadual) {
		this.tfInscricaoEstadual = tfInscricaoEstadual;
	}

	public TextField getTfInscricaoMunicipal() {
		return tfInscricaoMunicipal;
	}

	public void setTfInscricaoMunicipal(TextField tfInscricaoMunicipal) {
		this.tfInscricaoMunicipal = tfInscricaoMunicipal;
	}

	public PopupDateField getPdfDataConstituicao() {
		return pdfDataConstituicao;
	}

	public void setPdfDataConstituicao(PopupDateField pdfDataConstituicao) {
		this.pdfDataConstituicao = pdfDataConstituicao;
	}

	public TextField getTfSuframa() {
		return tfSuframa;
	}

	public void setTfSuframa(TextField tfSuframa) {
		this.tfSuframa = tfSuframa;
	}

	public TextField getTfNumeroRg() {
		return tfNumeroRg;
	}

	public void setTfNumeroRg(TextField tfNumeroRg) {
		this.tfNumeroRg = tfNumeroRg;
	}

	public TextField getTfEmissorRg() {
		return tfEmissorRg;
	}

	public void setTfEmissorRg(TextField tfEmissorRg) {
		this.tfEmissorRg = tfEmissorRg;
	}

	public TextField getTfOrgaoEmissor() {
		return tfOrgaoEmissor;
	}

	public void setTfOrgaoEmissor(TextField tfOrgaoEmissor) {
		this.tfOrgaoEmissor = tfOrgaoEmissor;
	}

	public TextField getTfCnh() {
		return tfCnh;
	}

	public void setTfCnh(TextField tfCnh) {
		this.tfCnh = tfCnh;
	}

	public TextField getTfTituloEleitor() {
		return tfTituloEleitor;
	}

	public void setTfTituloEleitor(TextField tfTituloEleitor) {
		this.tfTituloEleitor = tfTituloEleitor;
	}

	public TextField getTfTituloZona() {
		return tfTituloZona;
	}

	public void setTfTituloZona(TextField tfTituloZona) {
		this.tfTituloZona = tfTituloZona;
	}

	public TextField getTfTituloSecao() {
		return tfTituloSecao;
	}

	public void setTfTituloSecao(TextField tfTituloSecao) {
		this.tfTituloSecao = tfTituloSecao;
	}

	public PopupDateField getPdfDataCnhEmissao() {
		return pdfDataCnhEmissao;
	}

	public void setPdfDataCnhEmissao(PopupDateField pdfDataCnhEmissao) {
		this.pdfDataCnhEmissao = pdfDataCnhEmissao;
	}

	public TextField getTfNumeroReservista() {
		return tfNumeroReservista;
	}

	public void setTfNumeroReservista(TextField tfNumeroReservista) {
		this.tfNumeroReservista = tfNumeroReservista;
	}

	public PopupDateField getPdfDataEmissaoRg() {
		return pdfDataEmissaoRg;
	}

	public void setPdfDataEmissaoRg(PopupDateField pdfDataEmissaoRg) {
		this.pdfDataEmissaoRg = pdfDataEmissaoRg;
	}

	public OptionGroup getOgSexo() {
		return ogSexo;
	}

	public void setOgSexo(OptionGroup ogSexo) {
		this.ogSexo = ogSexo;
	}

	public CheckBox getCkCliente() {
		return ckCliente;
	}

	public void setCkCliente(CheckBox ckCliente) {
		this.ckCliente = ckCliente;
	}

	public CheckBox getCkFornecedor() {
		return ckFornecedor;
	}

	public void setCkFornecedor(CheckBox ckFornecedor) {
		this.ckFornecedor = ckFornecedor;
	}

	public CheckBox getCkColaborador() {
		return ckColaborador;
	}

	public void setCkColaborador(CheckBox ckColaborador) {
		this.ckColaborador = ckColaborador;
	}

	public CheckBox getCkTransportadora() {
		return ckTransportadora;
	}

	public void setCkTransportadora(CheckBox ckTransportadora) {
		this.ckTransportadora = ckTransportadora;
	}

	public ManyToOneCombo<EstadoCivilEntity> getMocEstadoCivil() {
		return mocEstadoCivil;
	}

	public void setMocEstadoCivil(
			ManyToOneCombo<EstadoCivilEntity> mocEstadoCivil) {
		this.mocEstadoCivil = mocEstadoCivil;
	}

	public SubFormComponent<PessoaContatoEntity, Integer> getSfPessoaContato() {
		return sfPessoaContato;
	}

	public void setSfPessoaContato(
			SubFormComponent<PessoaContatoEntity, Integer> sfPessoaContato) {
		this.sfPessoaContato = sfPessoaContato;
	}

	public SubFormComponent<PessoaEnderecoEntity, Integer> getSfPessoaEndereco() {
		return sfPessoaEndereco;
	}

	public void setSfPessoaEndereco(
			SubFormComponent<PessoaEnderecoEntity, Integer> sfPessoaEndereco) {
		this.sfPessoaEndereco = sfPessoaEndereco;
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		glGeral = bglGeral();
		mainLayout.addComponent(glGeral);

		tsGeral = new TabSheet();
		tsGeral.setImmediate(true);
		tsGeral.setSizeFull();

		tsGeral.addTab(bvlGeralPessoaFisica(), 0);
		tsGeral.addTab(bvlGeralPessoaJuridica(), 1);
		tsGeral.addTab(bvlPessoaContato(), 2);
		tsGeral.addTab(bvlPessoaEndereco(), 3);
		tsGeral.addTab(bvlCliente(), 4);
		tsGeral.addTab(bvlColaborador(), 5);
		tsGeral.addTab(bvlFornecedor(), 6);
		tsGeral.addTab(bvlTransportadora(), 7);

		mainLayout.addComponent(tsGeral);
		mainLayout.setExpandRatio(tsGeral, 1);
	}

	/**
	 * GERAL
	 */

	@AutoGenerated
	private GridLayout bglGeral() {
		// common part: create layout
		glGeral = new GridLayout(6, 3);
		glGeral.setImmediate(false);
		glGeral.setWidth("100.0%");
		glGeral.setHeight("-1px");
		glGeral.setMargin(false);
		glGeral.setSpacing(true);

		tfNome = ComponentUtil.buildTextField("Nome");
		tfNome.setRequired(true);
		glGeral.addComponent(tfNome, 0, 0, 2, 0);

		cbTipoPessoa = new ComboBox("Tipo de pessoa");
		cbTipoPessoa.setNullSelectionAllowed(false);
		cbTipoPessoa.setRequired(true);
		cbTipoPessoa.setImmediate(true);
		cbTipoPessoa.addValueChangeListener(event -> controller
				.vceVisibleTabSheet(event, null));
		glGeral.addComponent(cbTipoPessoa, 3, 0);

		tfEmail = ComponentUtil.buildTextField("Email");
		tfEmail.setRequired(true);
		tfEmail.setImmediate(true);
		glGeral.addComponent(tfEmail, 0, 1, 2, 1);

		tfSite = ComponentUtil.buildTextField("Site");
		tfSite.setRequired(true);
		tfSite.setImmediate(true);
		glGeral.addComponent(tfSite, 3, 1);

		glGeral.addComponent(bglCategoria(), 0, 2, 5, 2);

		return glGeral;
	}

	@AutoGenerated
	private GridLayout bglCategoria() {
		// common part: create layout
		GridLayout glCategoria = new GridLayout(4, 1);
		glCategoria.setImmediate(false);
		glCategoria.setWidth("100.0%");
		glCategoria.setHeight("-1px");
		glCategoria.setMargin(false);
		glCategoria.setSpacing(true);

		ckCliente = new CheckBox();
		ckCliente.setCaption("Cliente");
		ckCliente.setImmediate(true);
		ckCliente.setSizeFull();
		ckCliente.addValueChangeListener(event -> controller
				.vceVisibleTabSheet(event, 4));
		glCategoria.addComponent(ckCliente, 0, 0);

		ckColaborador = new CheckBox();
		ckColaborador.setCaption("Colaborador");
		ckColaborador.setImmediate(true);
		ckColaborador.setSizeFull();
		ckColaborador.addValueChangeListener(event -> controller
				.vceVisibleTabSheet(event, 5));
		glCategoria.addComponent(ckColaborador, 1, 0);

		ckFornecedor = new CheckBox();
		ckFornecedor.setCaption("Fornecedor");
		ckFornecedor.setImmediate(true);
		ckFornecedor.setSizeFull();
		ckFornecedor.addValueChangeListener(event -> controller
				.vceVisibleTabSheet(event, 6));
		glCategoria.addComponent(ckFornecedor, 2, 0);

		ckTransportadora = new CheckBox();
		ckTransportadora.setCaption("Transportadora");
		ckTransportadora.setImmediate(true);
		ckTransportadora.setSizeFull();
		ckTransportadora.addValueChangeListener(event -> controller
				.vceVisibleTabSheet(event, 7));
		glCategoria.addComponent(ckTransportadora, 3, 0);

		return glCategoria;
	}

	/**
	 * PESSOA FÍSICA
	 */

	@AutoGenerated
	private VerticalLayout bvlGeralPessoaFisica() {
		// common part: create layout
		vlGeralPessoaFisica = new VerticalLayout();
		vlGeralPessoaFisica.setImmediate(false);
		vlGeralPessoaFisica.setWidth("100.0%");
		vlGeralPessoaFisica.setHeight("100.0%");
		vlGeralPessoaFisica.setMargin(true);
		vlGeralPessoaFisica.setSpacing(true);
		vlGeralPessoaFisica.setCaption("Informação geral");

		//
		vlGeralPessoaFisica.addComponent(bplGeralPessoaFisica());

		return vlGeralPessoaFisica;
	}

	@AutoGenerated
	private Panel bplGeralPessoaFisica() {
		// common part: create layout
		plGeralPessoaFisica = new Panel();
		plGeralPessoaFisica.setImmediate(false);
		plGeralPessoaFisica.setSizeFull();

		plGeralPessoaFisica.setContent(bglGeralPessoaFisica());

		return plGeralPessoaFisica;
	}

	@AutoGenerated
	private GridLayout bglGeralPessoaFisica() {
		// common part: create layout
		glGeralPessoaFisica = new GridLayout(6, 7);
		glGeralPessoaFisica.setImmediate(false);
		glGeralPessoaFisica.setWidth("100.0%");
		glGeralPessoaFisica.setHeight("-1px");
		glGeralPessoaFisica.setMargin(true);
		glGeralPessoaFisica.setSpacing(true);

		mtfCpf = ComponentUtil.buildMaskedTextField("CPF", "###.###.###-##");
		pdfDataNascimento = ComponentUtil
				.buildPopupDateField("Data de nascimento");
		pdfDataNascimento.setWidth("112px");
		cbRaca = ComponentUtil.buildComboBox("Raça");
		mocEstadoCivil = new ManyToOneCombo<>();
		mocEstadoCivil.setCaption("Estado civil");
		cbTipoSanguineo = ComponentUtil.buildComboBox("Tipo sanguíneo");

		tfNaturalidade = ComponentUtil.buildTextField("Naturalidade");
		tfNacionalidade = ComponentUtil.buildTextField("Nacionalidade");

		tfNomePai = ComponentUtil.buildTextField("Nome do pai");
		tfNomeMae = ComponentUtil.buildTextField("Nome da mãe");

		glGeralPessoaFisica.addComponent(mtfCpf, 0, 0);
		glGeralPessoaFisica.addComponent(pdfDataNascimento, 1, 0);
		glGeralPessoaFisica.addComponent(mocEstadoCivil, 2, 0);
		glGeralPessoaFisica.addComponent(cbRaca, 3, 0);
		glGeralPessoaFisica.addComponent(cbTipoSanguineo, 4, 0);

		glGeralPessoaFisica.addComponent(tfNaturalidade, 0, 1, 1, 1);
		glGeralPessoaFisica.addComponent(tfNacionalidade, 2, 1, 3, 1);

		glGeralPessoaFisica.addComponent(tfNomePai, 0, 2, 1, 2);
		glGeralPessoaFisica.addComponent(tfNomeMae, 2, 2, 3, 2);

		GridLayout layoutRG = buildContentRg();
		glGeralPessoaFisica.addComponent(layoutRG, 0, 3, 1, 3);

		GridLayout layoutReservista = buildContentReservista();
		glGeralPessoaFisica.addComponent(layoutReservista, 2, 3, 3, 3);

		ogSexo = new OptionGroup("Sexo");
		glGeralPessoaFisica.addComponent(ogSexo, 4, 3);

		GridLayout layoutCNH = buildContentCnh();
		glGeralPessoaFisica.addComponent(layoutCNH, 0, 4, 1, 4);

		GridLayout layoutTitulo = buildContentTituloEleitor();
		glGeralPessoaFisica.addComponent(layoutTitulo, 2, 4, 3, 4);

		return glGeralPessoaFisica;
	}

	/**
	 * PESSOA JURÍDICA
	 */

	@AutoGenerated
	private VerticalLayout bvlGeralPessoaJuridica() {
		// common part: create layout
		vlGeralPessoaJuridica = new VerticalLayout();
		vlGeralPessoaJuridica.setImmediate(false);
		vlGeralPessoaJuridica.setWidth("100.0%");
		vlGeralPessoaJuridica.setHeight("100.0%");
		vlGeralPessoaJuridica.setMargin(true);
		vlGeralPessoaJuridica.setSpacing(true);
		vlGeralPessoaJuridica.setCaption("Informação geral");

		//
		vlGeralPessoaJuridica.addComponent(bplGeralPessoaJuridica());

		return vlGeralPessoaJuridica;
	}

	@AutoGenerated
	private Panel bplGeralPessoaJuridica() {
		// common part: create layout
		plGeralPessoaJuridica = new Panel();
		plGeralPessoaJuridica.setImmediate(false);
		plGeralPessoaJuridica.setSizeFull();

		plGeralPessoaJuridica.setContent(bglGeralPessoaJuridica());

		return plGeralPessoaJuridica;
	}

	@AutoGenerated
	private GridLayout bglGeralPessoaJuridica() {
		glGeralPessoaJuridica = new GridLayout(8, 7);
		glGeralPessoaJuridica.setImmediate(false);
		glGeralPessoaJuridica.setWidth("100.0%");
		glGeralPessoaJuridica.setHeight("-1px");
		glGeralPessoaJuridica.setMargin(true);
		glGeralPessoaJuridica.setSpacing(true);

		tfFantasia = ComponentUtil.buildTextField("Nome fantasia");
		glGeralPessoaJuridica.addComponent(tfFantasia, 0, 0, 5, 0);

		mtfCnpj = ComponentUtil.buildMaskedTextField("CNPJ",
				"##.###.###/####-##");
		tfInscricaoEstadual = ComponentUtil
				.buildTextField("Inscrição estadual");
		tfInscricaoMunicipal = ComponentUtil
				.buildTextField("Inscrição municipal");
		pdfDataConstituicao = ComponentUtil
				.buildPopupDateField("Data da constituição");
		tfSuframa = ComponentUtil.buildTextField("Suframa");

		glGeralPessoaJuridica.addComponent(mtfCnpj, 0, 1);
		glGeralPessoaJuridica.addComponent(tfInscricaoEstadual, 1, 1, 2, 1);
		glGeralPessoaJuridica.addComponent(tfInscricaoMunicipal, 3, 1);
		glGeralPessoaJuridica.addComponent(pdfDataConstituicao, 4, 1);
		glGeralPessoaJuridica.addComponent(tfSuframa, 5, 1);

		cbTipoRegime = ComponentUtil.buildComboBox("Tipo de regime");
		cbCrt = ComponentUtil.buildComboBox("CRT");

		glGeralPessoaJuridica.addComponent(cbTipoRegime, 0, 2, 2, 2);
		glGeralPessoaJuridica.addComponent(cbCrt, 3, 2, 4, 2);

		return glGeralPessoaJuridica;
	}

	/**
	 * @@@@@@@
	 */

	@AutoGenerated
	private VerticalLayout bvlPessoaContato() {
		// common part: create layout
		vlPessoaContato = new VerticalLayout();
		vlPessoaContato.setImmediate(false);
		vlPessoaContato.setWidth("100.0%");
		vlPessoaContato.setHeight("100.0%");
		vlPessoaContato.setMargin(true);
		vlPessoaContato.setSpacing(true);
		vlPessoaContato.setCaption("Contato");

		//
		vlPessoaContato.addComponent(bplPessoaContato());

		return vlPessoaContato;
	}

	@AutoGenerated
	private Panel bplPessoaContato() {
		// common part: create layout
		plPessoaContato = new Panel();
		plPessoaContato.setImmediate(false);
		plPessoaContato.setSizeFull();

		plPessoaContato.setContent(buildPessoaContatoSubForm());

		return plPessoaContato;
	}

	/**
	 * 
	 */

	@AutoGenerated
	private VerticalLayout bvlPessoaEndereco() {
		// common part: create layout
		vlPessoaEndereco = new VerticalLayout();
		vlPessoaEndereco.setImmediate(false);
		vlPessoaEndereco.setWidth("100.0%");
		vlPessoaEndereco.setHeight("100.0%");
		vlPessoaEndereco.setMargin(true);
		vlPessoaEndereco.setSpacing(true);
		vlPessoaEndereco.setCaption("Endereço");

		//
		vlPessoaEndereco.addComponent(bplPessoaEndereco());

		return vlPessoaEndereco;
	}

	@AutoGenerated
	private Panel bplPessoaEndereco() {
		// common part: create layout
		plPessoaEndereco = new Panel();
		plPessoaEndereco.setImmediate(false);
		plPessoaEndereco.setSizeFull();

		plPessoaEndereco.setContent(buildPessoaEnderecoSubForm());

		return plPessoaEndereco;
	}

	/**
	 * CLIENTE
	 */

	@AutoGenerated
	public VerticalLayout bvlCliente() {
		// common part: create layout
		vlCliente = new VerticalLayout();
		vlCliente.setImmediate(false);
		vlCliente.setWidth("100.0%");
		vlCliente.setHeight("100.0%");
		vlCliente.setMargin(true);
		vlCliente.setSpacing(true);
		vlCliente.setCaption("Cliente");

		//
		vlCliente.addComponent(bplCliente());

		return vlCliente;
	}

	@AutoGenerated
	private Panel bplCliente() {
		// common part: create layout
		plCliente = new Panel();
		plCliente.setImmediate(false);
		plCliente.setSizeFull();

		//
		plCliente.setContent(bglCliente());

		return plCliente;
	}

	@AutoGenerated
	private GridLayout bglCliente() {
		glCliente = new GridLayout();
		glCliente.setImmediate(false);
		glCliente.setWidth("100.0%");
		glCliente.setMargin(true);
		glCliente.setSpacing(true);
		glCliente.setRows(6);
		// glCliente.setColumns(3);

		// row 1
		// common part: create layout
		HorizontalLayout hlRow1 = new HorizontalLayout();
		hlRow1.setImmediate(false);
		hlRow1.setWidth("-1px");
		hlRow1.setHeight("-1px");
		hlRow1.setMargin(false);
		hlRow1.setSpacing(true);

		// mocSituacao
		mocClienteSituacao = new ManyToOneCombo<>();
		mocClienteSituacao.setCaption("Situação");
		mocClienteSituacao.setImmediate(false);
		mocClienteSituacao.setHeight("-1px");
		hlRow1.addComponent(mocClienteSituacao);

		// mocAtividade
		mocClienteAtividade = new ManyToOneCombo<>();
		mocClienteAtividade.setCaption("Atividade");
		mocClienteAtividade.setImmediate(false);
		mocClienteAtividade.setHeight("-1px");
		hlRow1.addComponent(mocClienteAtividade);

		// mocContaContabil
		mocClienteContaContabil = new ManyToOneCombo<>();
		mocClienteContaContabil.setCaption("Conta contábil");
		mocClienteContaContabil.setImmediate(false);
		mocClienteContaContabil.setHeight("-1px");
		hlRow1.addComponent(mocClienteContaContabil);

		// mocOperacaoFiscal
		mocClienteOperacaoFiscal = new ManyToOneCombo<>();
		mocClienteOperacaoFiscal.setCaption("Operação fiscal");
		mocClienteOperacaoFiscal.setImmediate(false);
		mocClienteOperacaoFiscal.setHeight("-1px");
		hlRow1.addComponent(mocClienteOperacaoFiscal);

		// row 2
		// common part: create layout
		HorizontalLayout hlRow2 = new HorizontalLayout();
		hlRow2.setImmediate(false);
		hlRow2.setWidth("-1px");
		hlRow2.setHeight("-1px");
		hlRow2.setMargin(false);
		hlRow2.setSpacing(true);

		// pdfDesde
		pdfClienteDesde = new PopupDateField();
		pdfClienteDesde.setCaption("Desde");
		pdfClienteDesde.setImmediate(false);
		pdfClienteDesde.setWidth("100px");
		pdfClienteDesde.setHeight("-1px");
		hlRow2.addComponent(pdfClienteDesde);

		// tfContaTomador
		tfClienteContaTomador = new TextField();
		tfClienteContaTomador.setCaption("Conta do tomador");
		tfClienteContaTomador.setImmediate(false);
		tfClienteContaTomador.setWidth("400px");
		tfClienteContaTomador.setHeight("-1px");
		hlRow2.addComponent(tfClienteContaTomador);

		// row 3
		// common part: create layout
		HorizontalLayout hlRow3 = new HorizontalLayout();
		hlRow3.setImmediate(false);
		hlRow3.setWidth("-1px");
		hlRow3.setHeight("-1px");
		hlRow3.setMargin(false);
		hlRow3.setSpacing(true);

		// cbGerarFinanceiro
		cbClienteGerarFinanceiro = new ComboBox();
		cbClienteGerarFinanceiro.setCaption("Gerar financeiro?");
		cbClienteGerarFinanceiro.setImmediate(false);
		cbClienteGerarFinanceiro.setWidth("147px");
		cbClienteGerarFinanceiro.setHeight("-1px");
		hlRow3.addComponent(cbClienteGerarFinanceiro);

		// cbIndicadorPreco
		cbClienteIndicadorPreco = new ComboBox();
		cbClienteIndicadorPreco.setCaption("Indicador de preço");
		cbClienteIndicadorPreco.setImmediate(false);
		cbClienteIndicadorPreco.setWidth("-1px");
		cbClienteIndicadorPreco.setHeight("-1px");
		hlRow3.addComponent(cbClienteIndicadorPreco);

		// cbTipoFrete
		cbClienteTipoFrete = new ComboBox();
		cbClienteTipoFrete.setCaption("Tipo de frete");
		cbClienteTipoFrete.setImmediate(false);
		cbClienteTipoFrete.setWidth("154px");
		cbClienteTipoFrete.setHeight("-1px");
		hlRow3.addComponent(cbClienteTipoFrete);

		// cbFormaDesconto
		cbClienteFormaDesconto = new ComboBox();
		cbClienteFormaDesconto.setCaption("Forma de desconto");
		cbClienteFormaDesconto.setImmediate(false);
		cbClienteFormaDesconto.setWidth("383px");
		cbClienteFormaDesconto.setHeight("-1px");
		hlRow3.addComponent(cbClienteFormaDesconto);

		// row 4
		// common part: create layout
		HorizontalLayout hlRow4 = new HorizontalLayout();
		hlRow4.setImmediate(false);
		hlRow4.setWidth("-1px");
		hlRow4.setHeight("-1px");
		hlRow4.setMargin(false);
		hlRow4.setSpacing(true);

		// tfTaxaDesconto
		tfClienteTaxaDesconto = new TextField();
		tfClienteTaxaDesconto.setCaption("Taxa de desconto");
		tfClienteTaxaDesconto.setImmediate(false);
		tfClienteTaxaDesconto.setWidth("191px");
		tfClienteTaxaDesconto.setHeight("-1px");
		hlRow4.addComponent(tfClienteTaxaDesconto);

		// tfLimiteCredito
		tfClienteLimiteCredito = new TextField();
		tfClienteLimiteCredito.setCaption("Limite de crédito");
		tfClienteLimiteCredito.setImmediate(false);
		tfClienteLimiteCredito.setWidth("194px");
		tfClienteLimiteCredito.setHeight("-1px");
		hlRow4.addComponent(tfClienteLimiteCredito);

		// row 5
		// common part: create layout
		HorizontalLayout hlRow5 = new HorizontalLayout();
		hlRow5.setImmediate(false);
		hlRow5.setWidth("-1px");
		hlRow5.setHeight("-1px");
		hlRow5.setMargin(false);
		hlRow5.setSpacing(true);

		// taClienteObservacao
		taClienteObservacao = new TextArea();
		taClienteObservacao.setCaption("Observação");
		taClienteObservacao.setImmediate(false);
		taClienteObservacao.setWidth("840px");
		taClienteObservacao.setHeight("-1px");
		hlRow5.addComponent(taClienteObservacao);

		glCliente.addComponent(hlRow1);
		glCliente.addComponent(hlRow2);
		glCliente.addComponent(hlRow3);
		glCliente.addComponent(hlRow4);
		glCliente.addComponent(hlRow5);

		return glCliente;
	}

	/**
	 * COLABORADOR
	 */

	@AutoGenerated
	public VerticalLayout bvlColaborador() {
		// common part: create layout
		vlColaborador = new VerticalLayout();
		vlColaborador.setImmediate(false);
		vlColaborador.setWidth("100.0%");
		vlColaborador.setHeight("100.0%");
		vlColaborador.setMargin(true);
		vlColaborador.setSpacing(true);
		vlColaborador.setCaption("Colaborador");

		//
		vlColaborador.addComponent(bplColaborador());

		return vlColaborador;
	}

	@AutoGenerated
	private Panel bplColaborador() {
		// common part: create layout
		plColaborador = new Panel();
		plColaborador.setImmediate(false);
		plColaborador.setSizeFull();

		//
		plColaborador.setContent(bglColaborador());

		return plColaborador;
	}

	@AutoGenerated
	private GridLayout bglColaborador() {
		glColaborador = new GridLayout();
		glColaborador.setImmediate(false);
		glColaborador.setWidth("100.0%");
		glColaborador.setMargin(true);
		glColaborador.setSpacing(true);
		glColaborador.setRows(6);

		return glColaborador;
	}

	/**
	 * FORNECEDOR
	 */

	@AutoGenerated
	public VerticalLayout bvlFornecedor() {
		// common part: create layout
		vlFornecedor = new VerticalLayout();
		vlFornecedor.setImmediate(false);
		vlFornecedor.setWidth("100.0%");
		vlFornecedor.setHeight("100.0%");
		vlFornecedor.setMargin(true);
		vlFornecedor.setSpacing(true);
		vlFornecedor.setCaption("Fornecedor");

		//
		vlFornecedor.addComponent(bplFornecedor());

		return vlFornecedor;
	}

	@AutoGenerated
	private Panel bplFornecedor() {
		// common part: create layout
		plFornecedor = new Panel();
		plFornecedor.setImmediate(false);
		plFornecedor.setSizeFull();

		//
		plFornecedor.setContent(bglFornecedor());

		return plFornecedor;
	}

	@AutoGenerated
	private GridLayout bglFornecedor() {
		glFornecedor = new GridLayout();
		glFornecedor.setImmediate(false);
		glFornecedor.setWidth("100.0%");
		glFornecedor.setMargin(true);
		glFornecedor.setSpacing(true);
		glFornecedor.setRows(6);

		// row 1
		// common part: create layout
		HorizontalLayout hlRow1 = new HorizontalLayout();
		hlRow1.setImmediate(false);
		hlRow1.setWidth("-1px");
		hlRow1.setHeight("-1px");
		hlRow1.setMargin(false);
		hlRow1.setSpacing(true);

		// mocFornecedorSituacaoForCli
		mocFornecedorSituacaoForCli = new ManyToOneCombo<>();
		mocFornecedorSituacaoForCli.setCaption("Situação");
		mocFornecedorSituacaoForCli.setImmediate(false);
		mocFornecedorSituacaoForCli.setHeight("-1px");
		hlRow1.addComponent(mocFornecedorSituacaoForCli);

		// mocFornecedorAtividadeForCli
		mocFornecedorAtividadeForCli = new ManyToOneCombo<>();
		mocFornecedorAtividadeForCli.setCaption("Atividade");
		mocFornecedorAtividadeForCli.setImmediate(false);
		mocFornecedorAtividadeForCli.setHeight("-1px");
		hlRow1.addComponent(mocFornecedorAtividadeForCli);

		// mocFornecedorContabilConta
		mocFornecedorContabilConta = new ManyToOneCombo<>();
		mocFornecedorContabilConta.setCaption("Conta contábil");
		mocFornecedorContabilConta.setImmediate(false);
		mocFornecedorContabilConta.setHeight("-1px");
		hlRow1.addComponent(mocFornecedorContabilConta);

		// row 2
		// common part: create layout
		HorizontalLayout hlRow2 = new HorizontalLayout();
		hlRow2.setImmediate(false);
		hlRow2.setWidth("-1px");
		hlRow2.setHeight("-1px");
		hlRow2.setMargin(false);
		hlRow2.setSpacing(true);

		// pdfFornecedorDesde
		pdfFornecedorDesde = new PopupDateField();
		pdfFornecedorDesde.setCaption("Desde");
		pdfFornecedorDesde.setImmediate(false);
		pdfFornecedorDesde.setWidth("100px");
		pdfFornecedorDesde.setHeight("-1px");
		hlRow2.addComponent(pdfFornecedorDesde);

		// tfFornecedorContaRemetente
		tfFornecedorContaRemetente = new TextField();
		tfFornecedorContaRemetente.setCaption("Conta do remetente");
		tfFornecedorContaRemetente.setImmediate(false);
		tfFornecedorContaRemetente.setWidth("400px");
		tfFornecedorContaRemetente.setHeight("-1px");
		hlRow2.addComponent(tfFornecedorContaRemetente);

		// row 3
		// common part: create layout
		HorizontalLayout hlRow3 = new HorizontalLayout();
		hlRow3.setImmediate(false);
		hlRow3.setWidth("-1px");
		hlRow3.setHeight("-1px");
		hlRow3.setMargin(false);
		hlRow3.setSpacing(true);

		// cbFornecedorGeraFaturamento
		cbFornecedorGeraFaturamento = new ComboBox();
		cbFornecedorGeraFaturamento.setCaption("Gera faturamento");
		cbFornecedorGeraFaturamento.setImmediate(false);
		cbFornecedorGeraFaturamento.setWidth("100px");
		cbFornecedorGeraFaturamento.setHeight("-1px");
		hlRow3.addComponent(cbFornecedorGeraFaturamento);

		// cbFornecedorOptanteSimples
		cbFornecedorOptanteSimples = new ComboBox();
		cbFornecedorOptanteSimples.setCaption("Optante do simples nacional");
		cbFornecedorOptanteSimples.setImmediate(false);
		cbFornecedorOptanteSimples.setWidth("100px");
		cbFornecedorOptanteSimples.setHeight("-1px");
		hlRow3.addComponent(cbFornecedorOptanteSimples);

		// cbFornecedorLocalizacao
		cbFornecedorLocalizacao = new ComboBox();
		cbFornecedorLocalizacao.setCaption("Localização");
		cbFornecedorLocalizacao.setImmediate(false);
		cbFornecedorLocalizacao.setWidth("100px");
		cbFornecedorLocalizacao.setHeight("-1px");
		hlRow3.addComponent(cbFornecedorLocalizacao);

		// row 4
		// common part: create layout
		HorizontalLayout hlRow4 = new HorizontalLayout();
		hlRow4.setImmediate(false);
		hlRow4.setWidth("-1px");
		hlRow4.setHeight("-1px");
		hlRow4.setMargin(false);
		hlRow4.setSpacing(true);

		// cbFornecedorSofreRetencao
		cbFornecedorSofreRetencao = new ComboBox();
		cbFornecedorSofreRetencao.setCaption("Sofre retenção");
		cbFornecedorSofreRetencao.setImmediate(false);
		cbFornecedorSofreRetencao.setWidth("100px");
		cbFornecedorSofreRetencao.setHeight("-1px");
		hlRow4.addComponent(cbFornecedorSofreRetencao);

		// tfFornecedorPrazoMedioEntrega
		tfFornecedorPrazoMedioEntrega = new TextField();
		tfFornecedorPrazoMedioEntrega.setCaption("Prazo médio de entrega");
		tfFornecedorPrazoMedioEntrega.setImmediate(false);
		tfFornecedorPrazoMedioEntrega.setWidth("200px");
		tfFornecedorPrazoMedioEntrega.setHeight("-1px");
		hlRow4.addComponent(tfFornecedorPrazoMedioEntrega);

		// tfFornecedorNumDiasPrimeiroVenc
		tfFornecedorNumDiasPrimeiroVenc = new TextField();
		tfFornecedorNumDiasPrimeiroVenc
				.setCaption("Nº de dias - 1º vencimento");
		tfFornecedorNumDiasPrimeiroVenc.setImmediate(false);
		tfFornecedorNumDiasPrimeiroVenc.setWidth("200px");
		tfFornecedorNumDiasPrimeiroVenc.setHeight("-1px");
		hlRow4.addComponent(tfFornecedorNumDiasPrimeiroVenc);

		// tfFornecedorNumDiasIntervalo
		tfFornecedorNumDiasIntervalo = new TextField();
		tfFornecedorNumDiasIntervalo.setCaption("Nº de dias - Intervalo");
		tfFornecedorNumDiasIntervalo.setImmediate(false);
		tfFornecedorNumDiasIntervalo.setWidth("200px");
		tfFornecedorNumDiasIntervalo.setHeight("-1px");
		hlRow4.addComponent(tfFornecedorNumDiasIntervalo);

		// row 5
		// common part: create layout
		HorizontalLayout hlRow5 = new HorizontalLayout();
		hlRow5.setImmediate(false);
		hlRow5.setWidth("-1px");
		hlRow5.setHeight("-1px");
		hlRow5.setMargin(false);
		hlRow5.setSpacing(true);

		// tfFornecedorQuantidadeParcelas
		tfFornecedorQuantidadeParcelas = new TextField();
		tfFornecedorQuantidadeParcelas.setCaption("Quantidade de parcelas");
		tfFornecedorQuantidadeParcelas.setImmediate(false);
		tfFornecedorQuantidadeParcelas.setWidth("194px");
		tfFornecedorQuantidadeParcelas.setHeight("-1px");
		hlRow5.addComponent(tfFornecedorQuantidadeParcelas);

		// tfFornecedorChequeNominalA
		tfFornecedorChequeNominalA = new TextField();
		tfFornecedorChequeNominalA.setCaption("Cheque nominal à");
		tfFornecedorChequeNominalA.setImmediate(false);
		tfFornecedorChequeNominalA.setWidth("400px");
		tfFornecedorChequeNominalA.setHeight("-1px");
		hlRow5.addComponent(tfFornecedorChequeNominalA);

		// row 6
		// common part: create layout
		HorizontalLayout hlRow6 = new HorizontalLayout();
		hlRow6.setImmediate(false);
		hlRow6.setWidth("-1px");
		hlRow6.setHeight("-1px");
		hlRow6.setMargin(false);
		hlRow6.setSpacing(true);

		// taFornecedorObservacao
		taFornecedorObservacao = new TextArea();
		taFornecedorObservacao.setCaption("Observação");
		taFornecedorObservacao.setImmediate(false);
		taFornecedorObservacao.setWidth("840px");
		taFornecedorObservacao.setHeight("-1px");
		hlRow6.addComponent(taFornecedorObservacao);

		glFornecedor.addComponent(hlRow1);
		glFornecedor.addComponent(hlRow2);
		glFornecedor.addComponent(hlRow3);
		glFornecedor.addComponent(hlRow4);
		glFornecedor.addComponent(hlRow5);
		glFornecedor.addComponent(hlRow6);

		return glFornecedor;
	}

	/**
	 * TRANSPORTADORA
	 */

	@AutoGenerated
	public VerticalLayout bvlTransportadora() {
		// common part: create layout
		vlTransportadora = new VerticalLayout();
		vlTransportadora.setImmediate(false);
		vlTransportadora.setWidth("100.0%");
		vlTransportadora.setHeight("100.0%");
		vlTransportadora.setMargin(true);
		vlTransportadora.setSpacing(true);
		vlTransportadora.setCaption("Transportadora");

		//
		vlTransportadora.addComponent(bplTransportadora());

		return vlTransportadora;
	}

	@AutoGenerated
	private Panel bplTransportadora() {
		// common part: create layout
		plTransportadora = new Panel();
		plTransportadora.setImmediate(false);
		plTransportadora.setSizeFull();

		//
		plTransportadora.setContent(bglTransportadora());

		return plTransportadora;
	}

	@AutoGenerated
	private GridLayout bglTransportadora() {
		glTransportadora = new GridLayout();
		glTransportadora.setImmediate(false);
		// glTransportadora.setSizeUndefined();
		glTransportadora.setWidth("100.0%");
		glTransportadora.setMargin(true);
		glTransportadora.setSpacing(true);
		glTransportadora.setRows(6);
		// glTransportadora.setColumns(3);

		// row 1
		// common part: create layout
		HorizontalLayout hlRow1 = new HorizontalLayout();
		hlRow1.setImmediate(false);
		hlRow1.setWidth("-1px");
		hlRow1.setHeight("-1px");
		hlRow1.setMargin(false);
		hlRow1.setSpacing(true);

		// mocTransportadoraContabilConta
		mocTransportadoraContabilConta = new ManyToOneCombo<>();
		mocTransportadoraContabilConta.setCaption("Conta contábil");
		mocTransportadoraContabilConta.setImmediate(false);
		mocTransportadoraContabilConta.setWidth("640px");
		mocTransportadoraContabilConta.setHeight("-1px");
		mocTransportadoraContabilConta.setSizeFull();
		hlRow1.addComponent(mocTransportadoraContabilConta);

		// row 2
		// common part: create layout
		HorizontalLayout hlRow2 = new HorizontalLayout();
		hlRow2.setImmediate(false);
		hlRow2.setWidth("-1px");
		hlRow2.setHeight("-1px");
		hlRow2.setMargin(false);
		hlRow2.setSpacing(true);

		// taTransportadoraObservacao
		taTransportadoraObservacao = new TextArea();
		taTransportadoraObservacao.setCaption("Observação");
		taTransportadoraObservacao.setImmediate(false);
		taTransportadoraObservacao.setWidth("840px");
		taTransportadoraObservacao.setHeight("-1px");
		hlRow2.addComponent(taTransportadoraObservacao);

		glTransportadora.addComponent(hlRow1);
		glTransportadora.addComponent(hlRow2);

		return glTransportadora;
	}

	/**
	 * 
	 */

	private GridLayout buildContentTituloEleitor() {
		GridLayout layoutTitulo = new GridLayout(3, 2);
		layoutTitulo.setImmediate(false);
		layoutTitulo.setWidth("100.0%");
		layoutTitulo.setHeight("-1px");
		layoutTitulo.setMargin(false);
		layoutTitulo.setSpacing(true);

		tfTituloEleitor = ComponentUtil.buildTextField("Número");
		tfTituloZona = ComponentUtil.buildNumericField("Zona");
		tfTituloSecao = ComponentUtil.buildNumericField("Seção");
		tfTituloZona.setConverter(new IntegerConverter());
		tfTituloZona.setMaxLength(10);
		tfTituloSecao.setConverter(new IntegerConverter());
		tfTituloSecao.setMaxLength(10);

		Label lblTitulo = new Label("Título de eleitor");
		layoutTitulo.addComponent(lblTitulo, 0, 0, 1, 0);
		layoutTitulo.addComponent(tfTituloEleitor, 0, 1);
		layoutTitulo.addComponent(tfTituloZona, 1, 1);
		layoutTitulo.addComponent(tfTituloSecao, 2, 1);

		return layoutTitulo;
	}

	private GridLayout buildContentCnh() {
		GridLayout layoutCnh = new GridLayout(3, 2);
		layoutCnh.setImmediate(false);
		layoutCnh.setWidth("100.0%");
		layoutCnh.setHeight("-1px");
		layoutCnh.setMargin(false);
		layoutCnh.setSpacing(true);

		tfCnh = ComponentUtil.buildTextField("Número da CNH");
		pdfDataCnhEmissao = ComponentUtil.buildPopupDateField("Emissão da CNH");
		cbCategoriaCnh = ComponentUtil.buildComboBox("Categoria da CNH");
		Label lblCnh = new Label("CNH");
		layoutCnh.addComponent(lblCnh, 0, 0);
		layoutCnh.addComponent(tfCnh, 0, 1);
		layoutCnh.addComponent(cbCategoriaCnh, 1, 1);
		layoutCnh.addComponent(pdfDataCnhEmissao, 2, 1);

		return layoutCnh;
	}

	private GridLayout buildContentReservista() {
		GridLayout layoutReservista = new GridLayout(2, 2);
		layoutReservista.setImmediate(false);
		layoutReservista.setWidth("100.0%");
		layoutReservista.setHeight("-1px");
		layoutReservista.setMargin(false);
		layoutReservista.setSpacing(true);

		tfNumeroReservista = ComponentUtil.buildTextField("Número");
		cbCategoriaReservista = ComponentUtil.buildComboBox("Categoria");
		Label lblReservista = new Label("Reservista");
		layoutReservista.addComponent(lblReservista, 0, 0);
		layoutReservista.addComponent(tfNumeroReservista, 0, 1);
		layoutReservista.addComponent(cbCategoriaReservista, 1, 1);

		return layoutReservista;
	}

	private GridLayout buildContentRg() {
		GridLayout layoutRg = new GridLayout(3, 2);
		layoutRg.setImmediate(false);
		layoutRg.setWidth("100.0%");
		layoutRg.setHeight("-1px");
		layoutRg.setMargin(false);
		layoutRg.setSpacing(true);

		tfNumeroRg = ComponentUtil.buildTextField("Número do RG");
		pdfDataEmissaoRg = ComponentUtil.buildPopupDateField("Emissão do RG");
		tfOrgaoEmissor = ComponentUtil.buildTextField("Órgão emissor");
		Label lblRg = new Label("RG");
		layoutRg.addComponent(lblRg, 0, 0);
		layoutRg.addComponent(tfNumeroRg, 0, 1);
		layoutRg.addComponent(tfOrgaoEmissor, 1, 1);
		layoutRg.addComponent(pdfDataEmissaoRg, 2, 1);

		return layoutRg;
	}

	/**
	 * SUBFORM
	 */

	private SubFormComponent<PessoaContatoEntity, Integer> buildPessoaContatoSubForm() {
		// common part: create layout

		sfPessoaContato = new SubFormComponent<PessoaContatoEntity, Integer>(
				PessoaContatoEntity.class, new String[] { "nome", "email",
						"foneComercial", "foneResidencial", "foneCelular" },
				new String[] { "Nome", "E-mail", "Telefone comercial",
						"Telefone residencial", "Celular" }) {

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			protected TableFieldFactory getFieldFactory() {
				return new TableFieldFactory() {

					/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

					@Override
					public Field<?> createField(Container container,
							Object itemId, Object propertyId,
							Component uiContext) {
						if ("nome".equals(propertyId)) {
							TextField textField = ComponentUtil
									.buildTextField("Nome");

							return textField;
						}

						if ("email".equals(propertyId)) {
							TextField textField = ComponentUtil
									.buildTextField("Email");

							return textField;
						}

						if ("foneComercial".equals(propertyId)) {
							MaskedTextField textField = ComponentUtil
									.buildMaskedTextField("Telefone comercial",
											"(##) #####-####");
							textField.setMaskClientOnly(true);

							return textField;
						}

						if ("foneResidencial".equals(propertyId)) {
							MaskedTextField textField = ComponentUtil
									.buildMaskedTextField(
											"Telefone residencial",
											"(##) #####-####");
							textField.setMaskClientOnly(true);

							return textField;
						}

						if ("foneCelular".equals(propertyId)) {
							MaskedTextField textField = ComponentUtil
									.buildMaskedTextField("Celular",
											"(##) #####-####");
							textField.setMaskClientOnly(true);

							return textField;
						}

						return null;
					}

				};
			}

			@Override
			public boolean validateItems(List<PessoaContatoEntity> items) {
				// TODO Auto-generated method stub
				return true;
			}

			protected PessoaContatoEntity getNovo() {
				PessoaContatoEntity detalhe = controller
						.adicionarPessoaContato();

				return detalhe;
			}

			@Override
			protected void getRemoverSelecionados(
					List<PessoaContatoEntity> values) {
				// TODO Auto-generated method stub
				controller.removerPessoaContato(values);
			}

		};

		return sfPessoaContato;
	}

	private SubFormComponent<PessoaEnderecoEntity, Integer> buildPessoaEnderecoSubForm() {
		// common part: create layout
		String[] atributos = new String[] { "cep", "logradouro", "numero",
				"complemento", "bairro", "cidade", "uf", "municipioIbge",
				"fone", "fax", "principal", "entrega", "cobranca",
				"correspondencia" };

		String[] headers = new String[] { "CEP", "Logradouro", "Nº",
				"Complemento", "Bairro", "Cidade", "UF", "Município IBGE",
				"Telefone", "Fax", "Principal", "Entrega", "Cobrança",
				"Correspondência" };

		sfPessoaEndereco = new SubFormComponent<PessoaEnderecoEntity, Integer>(
				PessoaEnderecoEntity.class, atributos, headers) {

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			protected TableFieldFactory getFieldFactory() {
				return new TableFieldFactory() {

					/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

					@Override
					public Field<?> createField(Container container,
							Object itemId, Object propertyId,
							Component uiContext) {
						if ("cep".equals(propertyId)) {
							MaskedTextField mtf = ComponentUtil
									.buildMaskedTextField("CEP", "#####-###");
							mtf.setMaskClientOnly(true);

							return mtf;
						}

						if ("logradouro".equals(propertyId)) {
							TextField tf = ComponentUtil
									.buildTextField("Logradouro");

							return tf;
						}

						if ("numero".equals(propertyId)) {
							TextField tf = ComponentUtil
									.buildTextField("Número");
							tf.setMaxLength(6);
							tf.setConverter(new IntegerConverter());

							return tf;
						}

						if ("complemento".equals(propertyId)) {
							TextField tf = ComponentUtil
									.buildTextField("Complemento");

							return tf;
						}

						if ("bairro".equals(propertyId)) {
							TextField tf = ComponentUtil
									.buildTextField("Bairro");

							return tf;
						}

						if ("cidade".equals(propertyId)) {
							TextField tf = ComponentUtil
									.buildTextField("Cidade");

							return tf;
						}

						if ("municipioIbge".equals(propertyId)) {
							TextField tf = ComponentUtil
									.buildNumericField("Município IBGE");
							tf.setConverter(new IntegerConverter());
							tf.setMaxLength(10);

							return tf;
						}

						if ("uf".equals(propertyId)) {
							ComboBox cb = ComponentUtil.buildComboBox("UF");

							BeanItemContainer<UfEntity> bic = controller
									.getUfBic();
							cb.setContainerDataSource(bic);
							cb.setItemCaptionPropertyId("nome");

							return cb;
						}

						if ("fone".equals(propertyId)) {
							MaskedTextField mtf = ComponentUtil
									.buildMaskedTextField("Telefone",
											"(##) #####-####");
							mtf.setMaskClientOnly(true);

							return mtf;
						}

						if ("fax".equals(propertyId)) {
							MaskedTextField mtf = ComponentUtil
									.buildMaskedTextField("Fax",
											"(##) #####-####");
							mtf.setMaskClientOnly(true);

							return mtf;
						}

						if ("principal".equals(propertyId)) {
							CheckBox check = ComponentUtil.buildCheckBox(null);

							return check;
						}

						if ("entrega".equals(propertyId)) {
							CheckBox check = ComponentUtil.buildCheckBox(null);

							return check;
						}

						if ("cobranca".equals(propertyId)) {
							CheckBox check = ComponentUtil.buildCheckBox(null);

							return check;
						}

						if ("correspondencia".equals(propertyId)) {
							CheckBox check = ComponentUtil.buildCheckBox(null);

							return check;
						}

						return null;
					}

				};
			}

			@Override
			public boolean validateItems(List<PessoaEnderecoEntity> items) {
				// TODO Auto-generated method stub
				return true;
			}

			protected PessoaEnderecoEntity getNovo() {
				PessoaEnderecoEntity endereco = controller
						.adicionarPessoaEndereco();

				return endereco;
			}

			@Override
			protected void getRemoverSelecionados(
					List<PessoaEnderecoEntity> values) {
				// TODO Auto-generated method stub
				controller.removerPessoaEndereco(values);
			}

		};

		return sfPessoaEndereco;
	}

}