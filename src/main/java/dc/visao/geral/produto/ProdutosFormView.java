package dc.visao.geral.produto;

import org.vaadin.tepi.imageviewer.ImageViewer;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.control.enums.SimNaoEn;
import dc.controller.geral.produto.ProdutosFormController;
import dc.entidade.diversos.Almoxarifado;
import dc.entidade.geral.produto.GrupoEntity;
import dc.entidade.geral.produto.MarcaEntity;
import dc.entidade.geral.produto.NcmEntity;
import dc.entidade.geral.produto.SubGrupoEntity;
import dc.entidade.geral.produto.UnidadeProdutoEntity;
import dc.entidade.tributario.GrupoTributarioEntity;
import dc.entidade.tributario.ICMSCustomizado;
import dc.visao.framework.component.IntegerConverter;
import dc.visao.framework.component.manytoonecombo.ManyToOneCombo;
import dc.visao.framework.util.ComponentUtil;

public class ProdutosFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private AbsoluteLayout absoluteLayout_2;

	@AutoGenerated
	private AbsoluteLayout absoluteLayout_3;

	@AutoGenerated
	private AbsoluteLayout absoluteLayout_4;

	TextField txtAliquotaICms, txtAliquotaIssqn, txtLoteEconomicoCompra,
			txtPontoPedido, txtTaxaComissao;

	TextField txtPeso, txtCodigoBalanca, txtTotalizadorParcial, txtExtipi,
			txtLst, txtEstoqueMaximo;

	TextField txtEstoqueMinimo, txtEstoqueIdeal, txtQuantidadeEstoqueAnterior,
			txtQuantidadeEstoque;

	TextField txtMarkup, txtPrecoLucroMaximo, txtPrecoLucroMinimo,
			txtPrecoLucroZero, txtCustoMedioLiquido;

	TextField txtValorSugerido, txtValorVendaMinimo, txtValorVenda,
			txtValorCompra, txtDescricao, txtDescricaoPdv;

	TextField txtNome, txtCodigoInterno, txtGtin;

	ComboBox cbTemIcmsCustomizado, cbClasse, cbInativo;
	ComboBox cbTipoItemSped, cbIppt, cbIat, cbTipo;

	@AutoGenerated
	private ImageViewer imgProduto;

	@AutoGenerated
	private TabSheet tabSheet_1;
	@AutoGenerated
	private TabSheet subForms;

	GridLayout fields;

	private ManyToOneCombo<SubGrupoEntity> mocSubGrupoProduto;
	private ManyToOneCombo<UnidadeProdutoEntity> mocUnidadeProduto;
	private ManyToOneCombo<MarcaEntity> mocMarcaProduto;
	private ManyToOneCombo<Almoxarifado> mocAlmoxarifado;
	private ManyToOneCombo<GrupoEntity> mocGrupoProduto;
	private ManyToOneCombo<NcmEntity> mocNcm;
	private ManyToOneCombo<GrupoTributarioEntity> mocGrupoTributario;
	private ManyToOneCombo<ICMSCustomizado> mocIcmsCustomizado;

	private ProdutosFormController controller;

	public ProdutosFormView(ProdutosFormController controller) {
		this.controller = controller;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	public ComboBox getCbTemIcmsCustomizado() {
		return cbTemIcmsCustomizado;
	}

	public void setCbTemIcmsCustomizado(ComboBox cbTemIcmsCustomizado) {
		this.cbTemIcmsCustomizado = cbTemIcmsCustomizado;
	}

	public ComboBox getCbTipoItemSped() {
		return cbTipoItemSped;
	}

	public void setCbTipoItemSped(ComboBox cbTipoItemSped) {
		this.cbTipoItemSped = cbTipoItemSped;
	}

	public ComboBox getCbIppt() {
		return cbIppt;
	}

	public void setCbIppt(ComboBox cbIppt) {
		this.cbIppt = cbIppt;
	}

	public ComboBox getCbIat() {
		return cbIat;
	}

	public void setCbIat(ComboBox cbIat) {
		this.cbIat = cbIat;
	}

	public ComboBox getCbTipo() {
		return cbTipo;
	}

	public void setCbTipo(ComboBox cbTipo) {
		this.cbTipo = cbTipo;
	}

	public ComboBox getCbClasse() {
		return cbClasse;
	}

	public void setCbClasse(ComboBox cbClasse) {
		this.cbClasse = cbClasse;
	}

	public ComboBox getCbInativo() {
		return cbInativo;
	}

	public void setCbInativo(ComboBox cbInativo) {
		this.cbInativo = cbInativo;
	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(VerticalLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public AbsoluteLayout getAbsoluteLayout_2() {
		return absoluteLayout_2;
	}

	public void setAbsoluteLayout_2(AbsoluteLayout absoluteLayout_2) {
		this.absoluteLayout_2 = absoluteLayout_2;
	}

	public AbsoluteLayout getAbsoluteLayout_3() {
		return absoluteLayout_3;
	}

	public void setAbsoluteLayout_3(AbsoluteLayout absoluteLayout_3) {
		this.absoluteLayout_3 = absoluteLayout_3;
	}

	public AbsoluteLayout getAbsoluteLayout_4() {
		return absoluteLayout_4;
	}

	public void setAbsoluteLayout_4(AbsoluteLayout absoluteLayout_4) {
		this.absoluteLayout_4 = absoluteLayout_4;
	}

	public ImageViewer getImgProduto() {
		return imgProduto;
	}

	public void setImgProduto(ImageViewer imgProduto) {
		this.imgProduto = imgProduto;
	}

	public TabSheet getTabSheet_1() {
		return tabSheet_1;
	}

	public void setTabSheet_1(TabSheet tabSheet_1) {
		this.tabSheet_1 = tabSheet_1;
	}

	public TabSheet getSubForms() {
		return subForms;
	}

	public void setSubForms(TabSheet subForms) {
		this.subForms = subForms;
	}

	public TextField getTxtAliquotaICms() {
		return txtAliquotaICms;
	}

	public void setTxtAliquotaICms(TextField txtAliquotaICms) {
		this.txtAliquotaICms = txtAliquotaICms;
	}

	public TextField getTxtAliquotaIssqn() {
		return txtAliquotaIssqn;
	}

	public void setTxtAliquotaIssqn(TextField txtAliquotaIssqn) {
		this.txtAliquotaIssqn = txtAliquotaIssqn;
	}

	public TextField getTxtLoteEconomicoCompra() {
		return txtLoteEconomicoCompra;
	}

	public void setTxtLoteEconomicoCompra(TextField txtLoteEconomicoCompra) {
		this.txtLoteEconomicoCompra = txtLoteEconomicoCompra;
	}

	public TextField getTxtPontoPedido() {
		return txtPontoPedido;
	}

	public void setTxtPontoPedido(TextField txtPontoPedido) {
		this.txtPontoPedido = txtPontoPedido;
	}

	public TextField getTxtTaxaComissao() {
		return txtTaxaComissao;
	}

	public void setTxtTaxaComissao(TextField txtTaxaComissao) {
		this.txtTaxaComissao = txtTaxaComissao;
	}

	public TextField getTxtPeso() {
		return txtPeso;
	}

	public void setTxtPeso(TextField txtPeso) {
		this.txtPeso = txtPeso;
	}

	public TextField getTxtCodigoBalanca() {
		return txtCodigoBalanca;
	}

	public void setTxtCodigoBalanca(TextField txtCodigoBalanca) {
		this.txtCodigoBalanca = txtCodigoBalanca;
	}

	public TextField getTxtTotalizadorParcial() {
		return txtTotalizadorParcial;
	}

	public void setTxtTotalizadorParcial(TextField txtTotalizadorParcial) {
		this.txtTotalizadorParcial = txtTotalizadorParcial;
	}

	public TextField getTxtExtipi() {
		return txtExtipi;
	}

	public void setTxtExtipi(TextField txtExtipi) {
		this.txtExtipi = txtExtipi;
	}

	public TextField getTxtLst() {
		return txtLst;
	}

	public void setTxtLst(TextField txtLst) {
		this.txtLst = txtLst;
	}

	public TextField getTxtEstoqueMaximo() {
		return txtEstoqueMaximo;
	}

	public void setTxtEstoqueMaximo(TextField txtEstoqueMaximo) {
		this.txtEstoqueMaximo = txtEstoqueMaximo;
	}

	public TextField getTxtEstoqueMinimo() {
		return txtEstoqueMinimo;
	}

	public void setTxtEstoqueMinimo(TextField txtEstoqueMinimo) {
		this.txtEstoqueMinimo = txtEstoqueMinimo;
	}

	public TextField getTxtEstoqueIdeal() {
		return txtEstoqueIdeal;
	}

	public void setTxtEstoqueIdeal(TextField txtEstoqueIdeal) {
		this.txtEstoqueIdeal = txtEstoqueIdeal;
	}

	public TextField getTxtQuantidadeEstoqueAnterior() {
		return txtQuantidadeEstoqueAnterior;
	}

	public void setTxtQuantidadeEstoqueAnterior(
			TextField txtQuantidadeEstoqueAnterior) {
		this.txtQuantidadeEstoqueAnterior = txtQuantidadeEstoqueAnterior;
	}

	public TextField getTxtQuantidadeEstoque() {
		return txtQuantidadeEstoque;
	}

	public void setTxtQuantidadeEstoque(TextField txtQuantidadeEstoque) {
		this.txtQuantidadeEstoque = txtQuantidadeEstoque;
	}

	public TextField getTxtMarkup() {
		return txtMarkup;
	}

	public void setTxtMarkup(TextField txtMarkup) {
		this.txtMarkup = txtMarkup;
	}

	public TextField getTxtPrecoLucroMaximo() {
		return txtPrecoLucroMaximo;
	}

	public void setTxtPrecoLucroMaximo(TextField txtPrecoLucroMaximo) {
		this.txtPrecoLucroMaximo = txtPrecoLucroMaximo;
	}

	public TextField getTxtPrecoLucroMinimo() {
		return txtPrecoLucroMinimo;
	}

	public void setTxtPrecoLucroMinimo(TextField txtPrecoLucroMinimo) {
		this.txtPrecoLucroMinimo = txtPrecoLucroMinimo;
	}

	public TextField getTxtPrecoLucroZero() {
		return txtPrecoLucroZero;
	}

	public void setTxtPrecoLucroZero(TextField txtPrecoLucroZero) {
		this.txtPrecoLucroZero = txtPrecoLucroZero;
	}

	public TextField getTxtCustoMedioLiquido() {
		return txtCustoMedioLiquido;
	}

	public void setTxtCustoMedioLiquido(TextField txtCustoMedioLiquido) {
		this.txtCustoMedioLiquido = txtCustoMedioLiquido;
	}

	public TextField getTxtValorSugerido() {
		return txtValorSugerido;
	}

	public void setTxtValorSugerido(TextField txtValorSugerido) {
		this.txtValorSugerido = txtValorSugerido;
	}

	public TextField getTxtValorVendaMinimo() {
		return txtValorVendaMinimo;
	}

	public void setTxtValorVendaMinimo(TextField txtValorVendaMinimo) {
		this.txtValorVendaMinimo = txtValorVendaMinimo;
	}

	public TextField getTxtValorVenda() {
		return txtValorVenda;
	}

	public void setTxtValorVenda(TextField txtValorVenda) {
		this.txtValorVenda = txtValorVenda;
	}

	public TextField getTxtValorCompra() {
		return txtValorCompra;
	}

	public void setTxtValorCompra(TextField txtValorCompra) {
		this.txtValorCompra = txtValorCompra;
	}

	public TextField getTxtDescricao() {
		return txtDescricao;
	}

	public void setTxtDescricao(TextField txtDescricao) {
		this.txtDescricao = txtDescricao;
	}

	public TextField getTxtDescricaoPdv() {
		return txtDescricaoPdv;
	}

	public void setTxtDescricaoPdv(TextField txtDescricaoPdv) {
		this.txtDescricaoPdv = txtDescricaoPdv;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}

	public TextField getTxtCodigoInterno() {
		return txtCodigoInterno;
	}

	public void setTxtCodigoInterno(TextField txtCodigoInterno) {
		this.txtCodigoInterno = txtCodigoInterno;
	}

	public TextField getTxtGtin() {
		return txtGtin;
	}

	public void setTxtGtin(TextField txtGtin) {
		this.txtGtin = txtGtin;
	}

	public ManyToOneCombo<UnidadeProdutoEntity> getMocUnidadeProduto() {
		return mocUnidadeProduto;
	}

	public void setMocUnidadeProduto(
			ManyToOneCombo<UnidadeProdutoEntity> mocUnidadeProduto) {
		this.mocUnidadeProduto = mocUnidadeProduto;
	}

	public ManyToOneCombo<MarcaEntity> getMocMarcaProduto() {
		return mocMarcaProduto;
	}

	public void setMocMarcaProduto(ManyToOneCombo<MarcaEntity> mocMarcaProduto) {
		this.mocMarcaProduto = mocMarcaProduto;
	}

	public ManyToOneCombo<Almoxarifado> getMocAlmoxarifado() {
		return mocAlmoxarifado;
	}

	public void setMocAlmoxarifado(ManyToOneCombo<Almoxarifado> mocAlmoxarifado) {
		this.mocAlmoxarifado = mocAlmoxarifado;
	}

	public ManyToOneCombo<GrupoEntity> getMocGrupoProduto() {
		return mocGrupoProduto;
	}

	public void setMocGrupoProduto(ManyToOneCombo<GrupoEntity> mocGrupoProduto) {
		this.mocGrupoProduto = mocGrupoProduto;
	}

	public ManyToOneCombo<NcmEntity> getMocNcm() {
		return mocNcm;
	}

	public void setMocNcm(ManyToOneCombo<NcmEntity> mocNcm) {
		this.mocNcm = mocNcm;
	}

	public ManyToOneCombo<GrupoTributarioEntity> getMocGrupoTributario() {
		return mocGrupoTributario;
	}

	public void setMocGrupoTributario(
			ManyToOneCombo<GrupoTributarioEntity> mocGrupoTributario) {
		this.mocGrupoTributario = mocGrupoTributario;
	}

	public ManyToOneCombo<SubGrupoEntity> getMocSubGrupoProduto() {
		return mocSubGrupoProduto;
	}

	public void setMocSubGrupoProduto(
			ManyToOneCombo<SubGrupoEntity> mocSubGrupoProduto) {
		this.mocSubGrupoProduto = mocSubGrupoProduto;
	}

	public GridLayout getFields() {
		return fields;
	}

	public void setFields(GridLayout fields) {
		this.fields = fields;
	}

	public ManyToOneCombo<ICMSCustomizado> getMocIcmsCustomizado() {
		return mocIcmsCustomizado;
	}

	public void setMocIcmsCustomizado(
			ManyToOneCombo<ICMSCustomizado> mocIcmsCustomizado) {
		this.mocIcmsCustomizado = mocIcmsCustomizado;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		// mainLayout.setWidth("100%");
		// mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setHeight("100%");
		// setWidth("100%");

		fields = buildFields();

		subForms = new TabSheet();
		subForms.setWidth("100.0%");
		subForms.setHeight("100.0%");
		subForms.setSizeFull();
		subForms.setImmediate(true);
		mainLayout.addComponent(fields);

		buildPrincipalSubForm();
		buildValorPrincipalSubForm();
		buildComplementarSubForm();
		mainLayout.addComponent(subForms);

		//
		// // absoluteLayout_2
		// absoluteLayout_2 = buildAbsoluteLayout_2();
		// mainLayout.addComponent(absoluteLayout_2, 0, 2);

		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildFields() {

		fields = new GridLayout(7, 7);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);

		mocSubGrupoProduto = new ManyToOneCombo<>();
		mocSubGrupoProduto.setCaption(" Subgrupo do produto");
		// mocSubGrupoProduto.setWidth("780px");
		mocSubGrupoProduto.setHeight("-1px");

		// //
		mocUnidadeProduto = new ManyToOneCombo<>();
		mocUnidadeProduto.setCaption("Unidade do produto");
		mocUnidadeProduto.setImmediate(false);
		// mocUnidadeProduto.setWidth("780px");
		mocUnidadeProduto.setHeight("-1px");

		// //
		fields.addComponent(mocSubGrupoProduto, 0, 0);
		fields.addComponent(mocUnidadeProduto, 1, 0);

		// //
		mocMarcaProduto = new ManyToOneCombo<>();
		mocMarcaProduto.setCaption("Marca do produto");
		// mocMarcaProduto.setImmediate(false);
		// mocMarcaProduto.setWidth("780px");
		mocMarcaProduto.setHeight("-1px");

		// //
		// // // mocAlmoxarifado
		mocAlmoxarifado = new ManyToOneCombo<>();
		mocAlmoxarifado.setCaption("Almoxarifado");
		// mocAlmoxarifado.setImmediate(false);
		// mocAlmoxarifado.setWidth("780px");
		mocAlmoxarifado.setHeight("-1px");

		fields.addComponent(mocMarcaProduto, 0, 1);
		fields.addComponent(mocAlmoxarifado, 1, 1);

		// //
		// cbIcmsCustomizado
		cbTemIcmsCustomizado = new ComboBox();
		cbTemIcmsCustomizado.setCaption("ICMS Customizado?");
		// cbTemIcmsCustomizado.setImmediate(false);
		// cbTemIcmsCustomizado.setWidth("100px");
		cbTemIcmsCustomizado.setHeight("-1px");

		// carregarIcms();
		cbTemIcmsCustomizado.setValue(SimNaoEn.N);
		cbTemIcmsCustomizado
				.addValueChangeListener(new Property.ValueChangeListener() {
					@Override
					public void valueChange(ValueChangeEvent event) {
						SimNaoEn obj = (SimNaoEn) event.getProperty()
								.getValue();

						if (obj.equals(SimNaoEn.S)) {
							fields.removeComponent(mocGrupoTributario);
							fields.addComponent(mocIcmsCustomizado, 1, 2);
						}

						if (obj.equals(SimNaoEn.N)) {
							fields.removeComponent(mocIcmsCustomizado);
							fields.addComponent(mocGrupoTributario, 1, 2);
						}
					}
				});

		// mocGrupoTributario
		mocGrupoTributario = new ManyToOneCombo<>();
		mocGrupoTributario.setCaption("Grupo tributário");
		// mocGrupoTributario.setImmediate(false);
		// mocGrupoTributario.setWidth("456px");
		// mocGrupoTributario.setHeight("-1px");

		mocGrupoProduto = new ManyToOneCombo<>();
		mocGrupoProduto.setCaption("Grupo do produto");
		// mocGrupoProduto.setWidth("456px");
		mocGrupoProduto.setHeight("-1px");

		fields.addComponent(cbTemIcmsCustomizado, 0, 2);
		fields.addComponent(mocGrupoProduto, 1, 2);
		// ////

		mocIcmsCustomizado = new ManyToOneCombo<>();
		mocIcmsCustomizado.setCaption("ICMS Customizado");
		// mocIcmsCustomizado.setImmediate(false);
		// mocIcmsCustomizado.setWidth("456px");
		// mocIcmsCustomizado.setHeight("-1px");

		return fields;

	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_2() {
		// common part: create layout
		absoluteLayout_2 = new AbsoluteLayout();
		absoluteLayout_2.setImmediate(false);
		absoluteLayout_2.setWidth("100.0%");
		absoluteLayout_2.setHeight("100.0%");

		// tabSheet_1
		tabSheet_1 = buildTabSheet_1();
		absoluteLayout_2.addComponent(tabSheet_1, "top:-3.0px;left:20.0px;");

		return absoluteLayout_2;
	}

	@AutoGenerated
	private TabSheet buildTabSheet_1() {
		// common part: create layout
		tabSheet_1 = new TabSheet();
		tabSheet_1.setImmediate(true);
		tabSheet_1.setWidth("100.0%");
		tabSheet_1.setHeight("100.0%");

		// absoluteLayout_3

		// absoluteLayout_4
		absoluteLayout_4 = buildAbsoluteLayout_4();
		tabSheet_1.addTab(absoluteLayout_4, "Tab", null);

		return tabSheet_1;
	}

	public void buildPrincipalSubForm() {
		GridLayout layout = new GridLayout(5, 5);
		layout.setImmediate(false);
		layout.setWidth("100.0%");
		layout.setHeight("100.0%");
		layout.setMargin(true);
		layout.setSpacing(false);
		layout.setSizeFull();

		txtGtin = ComponentUtil.buildTextField("GTIN");
		txtGtin.setMaxLength(60);
		txtGtin.setImmediate(false);
		txtGtin.setWidth("300px");
		txtGtin.setHeight("-1px");

		// txtCodigoInterno
		txtCodigoInterno = ComponentUtil.buildTextField("Código Interno");
		txtCodigoInterno.setMaxLength(60);
		txtCodigoInterno.setImmediate(false);
		txtCodigoInterno.setWidth("200px");
		txtCodigoInterno.setHeight("-1px");

		mocNcm = new ManyToOneCombo<>();
		mocNcm.setCaption("NCM");
		mocNcm.setImmediate(false);
		mocNcm.setWidth("250px");
		mocNcm.setHeight("-1px");

		// cbInativo
		cbInativo = new ComboBox();
		cbInativo.setCaption("Inativo?");
		cbInativo.setImmediate(false);
		cbInativo.setWidth("100px");
		cbInativo.setHeight("-1px");
		// carregarInativo();

		// cbClasse
		cbClasse = new ComboBox();
		cbClasse.setCaption("Classe");
		cbClasse.setImmediate(false);
		cbClasse.setWidth("100px");
		cbClasse.setHeight("-1px");
		// carregarClasse();

		layout.addComponent(txtGtin, 0, 0);
		layout.addComponent(txtCodigoInterno, 1, 0);
		layout.addComponent(mocNcm, 2, 0);
		layout.addComponent(cbInativo, 3, 0);
		layout.addComponent(cbClasse, 4, 0);

		txtNome = ComponentUtil.buildTextField("Nome");
		txtNome.setImmediate(false);
		txtNome.setWidth("300px");
		txtNome.setHeight("-1px");

		// txtDescricaoPdv
		txtDescricaoPdv = ComponentUtil.buildTextField("Descrição PDV");
		txtDescricaoPdv.setImmediate(false);
		txtDescricaoPdv.setWidth("300px");
		txtDescricaoPdv.setHeight("-1px");

		// // txtDescricao
		txtDescricao = ComponentUtil.buildTextField("Descrição");
		txtDescricao.setImmediate(false);
		txtDescricao.setWidth("300px");
		txtDescricao.setHeight("-1px");
		//
		layout.addComponent(txtNome, 0, 1);
		layout.addComponent(txtDescricaoPdv, 1, 1);
		layout.addComponent(txtDescricao, 0, 2);

		subForms.addTab(layout, "Principal", null);
	}

	public void buildValorPrincipalSubForm() {
		GridLayout layout = new GridLayout(5, 5);
		layout.setImmediate(false);
		layout.setWidth("100.0%");
		layout.setHeight("100.0%");
		layout.setMargin(true);
		layout.setSpacing(true);
		layout.setSizeFull();

		txtValorCompra = ComponentUtil.buildCurrencyField("Valor Compra");
		txtValorCompra.setHeight("-1px");
		txtValorCompra.setWidth("150px");

		txtValorVenda = ComponentUtil.buildCurrencyField("Valor Venda");
		txtValorVenda.setHeight("-1px");
		txtValorVenda.setWidth("150px");

		txtValorVendaMinimo = ComponentUtil
				.buildCurrencyField("Valor Venda Minimo");
		txtValorVendaMinimo.setHeight("-1px");
		txtValorVendaMinimo.setWidth("150px");

		txtValorSugerido = ComponentUtil.buildCurrencyField("Valor Sugerido");
		txtValorSugerido.setHeight("-1px");
		txtValorSugerido.setWidth("150px");

		txtCustoMedioLiquido = ComponentUtil
				.buildCurrencyField("Custo Médio Liquido");
		txtCustoMedioLiquido.setHeight("-1px");
		txtCustoMedioLiquido.setWidth("150px");

		layout.addComponent(txtValorCompra, 0, 0);
		layout.addComponent(txtValorVenda, 1, 0);
		layout.addComponent(txtValorVendaMinimo, 2, 0);
		layout.addComponent(txtValorSugerido, 3, 0);
		layout.addComponent(txtCustoMedioLiquido, 4, 0);

		txtPrecoLucroZero = ComponentUtil
				.buildCurrencyField("Preço Lucro Zero");
		txtPrecoLucroZero.setHeight("-1px");
		txtPrecoLucroZero.setWidth("150px");

		txtPrecoLucroMinimo = ComponentUtil
				.buildCurrencyField("Preço Lucro Minimo");
		txtPrecoLucroMinimo.setHeight("-1px");
		txtPrecoLucroMinimo.setWidth("150px");

		txtPrecoLucroMaximo = ComponentUtil
				.buildCurrencyField("Preço Lucro Máximo");
		txtPrecoLucroMaximo.setHeight("-1px");
		txtPrecoLucroMaximo.setWidth("150px");

		txtMarkup = ComponentUtil.buildCurrencyField("Markup");
		txtMarkup.setHeight("-1px");
		txtMarkup.setWidth("150px");

		txtQuantidadeEstoque = ComponentUtil
				.buildNumberField("Quantidade Estoque");
		txtQuantidadeEstoque.setHeight("-1px");
		txtQuantidadeEstoque.setWidth("150px");

		layout.addComponent(txtPrecoLucroZero, 0, 1);
		layout.addComponent(txtPrecoLucroMinimo, 1, 1);
		layout.addComponent(txtPrecoLucroMaximo, 2, 1);
		layout.addComponent(txtMarkup, 3, 1);
		layout.addComponent(txtQuantidadeEstoque, 4, 1);

		txtQuantidadeEstoqueAnterior = ComponentUtil
				.buildNumberField("Qtde Estoque Anterior");
		txtQuantidadeEstoqueAnterior.setHeight("-1px");
		txtQuantidadeEstoqueAnterior.setHeight("-1px");
		txtQuantidadeEstoqueAnterior.setWidth("150px");

		txtEstoqueIdeal = ComponentUtil.buildNumberField("Estoque Ideal");
		txtEstoqueIdeal.setHeight("-1px");
		txtEstoqueIdeal.setHeight("-1px");
		txtEstoqueIdeal.setWidth("150px");

		txtEstoqueMinimo = ComponentUtil.buildNumberField("Estoque Minimo");
		txtEstoqueMinimo.setHeight("-1px");
		txtEstoqueMinimo.setHeight("-1px");
		txtEstoqueMinimo.setWidth("150px");

		txtEstoqueMaximo = ComponentUtil.buildNumberField("Estoque Máximo");
		txtEstoqueMaximo.setHeight("-1px");
		txtEstoqueMaximo.setHeight("-1px");
		txtEstoqueMaximo.setWidth("150px");

		layout.addComponent(txtQuantidadeEstoqueAnterior, 0, 2);
		layout.addComponent(txtEstoqueIdeal, 1, 2);
		layout.addComponent(txtEstoqueMinimo, 2, 2);
		layout.addComponent(txtEstoqueMaximo, 3, 2);

		subForms.addTab(layout, "Valores Principais", null);
	}

	public void buildComplementarSubForm() {
		GridLayout layout = new GridLayout(6, 6);
		layout.setImmediate(false);
		layout.setWidth("100.0%");
		layout.setHeight("100.0%");
		layout.setMargin(true);
		layout.setSpacing(true);
		layout.setSizeFull();

		txtLst = new TextField("LST:");
		txtLst.setMaxLength(4);

		txtExtipi = new TextField("EXTIPI");
		txtExtipi.setMaxLength(3);

		cbTipo = ComponentUtil.buildComboBox("Tipo");
		cbTipo.setHeight("-1px");
		cbTipo.setWidth("150px");
		// carregarTipoVenda();

		cbIat = ComponentUtil.buildComboBox("IAT");
		cbIat.setHeight("-1px");
		cbIat.setWidth("150px");
		// carregarIAT();

		layout.addComponent(txtLst, 0, 0);
		layout.addComponent(txtExtipi, 1, 0);

		cbIppt = ComponentUtil.buildComboBox("IPPT");
		cbIppt.setHeight("-1px");
		cbIppt.setWidth("150px");
		// carregarIPPT();

		cbTipoItemSped = ComponentUtil.buildComboBox("Tipo Item SPED");
		cbTipoItemSped.setHeight("-1px");
		cbTipoItemSped.setWidth("150px");
		// carregarSped();

		layout.addComponent(cbTipo, 2, 0);
		layout.addComponent(cbIat, 3, 0);
		layout.addComponent(cbIppt, 4, 0);
		layout.addComponent(cbTipoItemSped, 5, 0);

		txtTotalizadorParcial = ComponentUtil
				.buildCurrencyField("Totalizador Parcial");
		txtTotalizadorParcial.setHeight("-1px");
		txtTotalizadorParcial.setWidth("150px");

		txtCodigoBalanca = ComponentUtil.buildNumericField("Código Balança");
		txtCodigoBalanca.setConverter(new IntegerConverter());
		txtCodigoBalanca.setHeight("-1px");
		txtCodigoBalanca.setWidth("150px");

		txtPeso = ComponentUtil.buildNumberField("Peso");
		txtPeso.setHeight("-1px");
		txtPeso.setWidth("150px");

		txtTaxaComissao = ComponentUtil.buildPercentageField("Taxa Comissão");
		txtTaxaComissao.setHeight("-1px");
		txtTaxaComissao.setWidth("150px");

		layout.addComponent(txtTotalizadorParcial, 0, 1);
		layout.addComponent(txtCodigoBalanca, 1, 1);
		layout.addComponent(txtPeso, 2, 1);
		layout.addComponent(txtTaxaComissao, 3, 1);

		txtPontoPedido = ComponentUtil.buildNumberField("Ponto Pedido");
		txtPontoPedido.setHeight("-1px");
		txtPontoPedido.setWidth("150px");

		txtLoteEconomicoCompra = ComponentUtil
				.buildNumberField("Lote Econômico Compra");
		txtLoteEconomicoCompra.setHeight("-1px");
		txtLoteEconomicoCompra.setWidth("150px");

		txtAliquotaICms = ComponentUtil.buildPercentageField("Aliquota ICMS");
		txtAliquotaICms.setHeight("-1px");
		txtAliquotaICms.setWidth("150px");

		txtAliquotaIssqn = ComponentUtil.buildPercentageField("Aliquota ISSQN");
		txtAliquotaIssqn.setHeight("-1px");
		txtAliquotaIssqn.setWidth("150px");

		layout.addComponent(txtPontoPedido, 0, 2);
		layout.addComponent(txtLoteEconomicoCompra, 1, 2);
		layout.addComponent(txtAliquotaICms, 2, 2);
		layout.addComponent(txtAliquotaIssqn, 3, 2);

		subForms.addTab(layout, "Dados Complementares", null);
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_4() {
		// common part: create layout
		absoluteLayout_4 = new AbsoluteLayout();
		absoluteLayout_4.setImmediate(false);
		absoluteLayout_4.setWidth("100.0%");
		absoluteLayout_4.setHeight("100.0%");

		// imgProduto
		imgProduto = new ImageViewer();
		imgProduto.setCaption("Imagem do Produto");
		imgProduto.setImmediate(false);
		imgProduto.setWidth("-1px");
		imgProduto.setHeight("130px");
		absoluteLayout_4.addComponent(imgProduto, "top:12.0px;left:9.0px;");

		// txtLst
		txtLst = new TextField();
		txtLst.setCaption("LST");
		txtLst.setImmediate(false);
		txtLst.setWidth("40px");
		txtLst.setHeight("-1px");
		absoluteLayout_4.addComponent(txtLst, "top:12.0px;left:159.0px;");

		// txtExtipi
		txtExtipi = new TextField();
		txtExtipi.setCaption("EXTIPI");
		txtExtipi.setImmediate(false);
		txtExtipi.setWidth("-1px");
		txtExtipi.setHeight("-1px");
		absoluteLayout_4.addComponent(txtExtipi, "top:12.0px;left:219.0px;");

		// cbTipo
		cbTipo = new ComboBox();
		cbTipo.setCaption("Tipo");
		cbTipo.setImmediate(false);
		cbTipo.setWidth("80px");
		cbTipo.setHeight("-1px");
		absoluteLayout_4.addComponent(cbTipo, "top:12.0px;left:379.0px;");

		// cbIat
		cbIat = new ComboBox();
		cbIat.setCaption("IAT");
		cbIat.setImmediate(false);
		cbIat.setWidth("100.0%");
		cbIat.setHeight("-1px");
		absoluteLayout_4.addComponent(cbIat,
				"top:12.0px;right:426.0px;left:479.0px;");

		// cbIppt
		cbIppt = new ComboBox();
		cbIppt.setCaption("IPPT");
		cbIppt.setImmediate(false);
		cbIppt.setWidth("106px");
		cbIppt.setHeight("-1px");
		absoluteLayout_4.addComponent(cbIppt, "top:12.0px;left:599.0px;");

		// cbTipoItemSped
		cbTipoItemSped = new ComboBox();
		cbTipoItemSped.setCaption("Tipo Item Sped");
		cbTipoItemSped.setImmediate(false);
		cbTipoItemSped.setWidth("-1px");
		cbTipoItemSped.setHeight("-1px");
		absoluteLayout_4.addComponent(cbTipoItemSped,
				"top:12.0px;left:726.0px;");

		// txtTotalizadorParcial
		txtTotalizadorParcial = new TextField();
		txtTotalizadorParcial.setCaption("Totalizador Parcial");
		txtTotalizadorParcial.setImmediate(false);
		txtTotalizadorParcial.setWidth("-1px");
		txtTotalizadorParcial.setHeight("-1px");
		absoluteLayout_4.addComponent(txtTotalizadorParcial,
				"top:54.0px;left:158.0px;");

		// txtCodigoBalanca
		txtCodigoBalanca = new TextField();
		txtCodigoBalanca.setCaption("Código Balança");
		txtCodigoBalanca.setImmediate(false);
		txtCodigoBalanca.setWidth("-1px");
		txtCodigoBalanca.setHeight("-1px");
		absoluteLayout_4.addComponent(txtCodigoBalanca,
				"top:54.0px;left:319.0px;");

		// txtPeso
		txtPeso = new TextField();
		txtPeso.setCaption("Peso");
		txtPeso.setImmediate(false);
		txtPeso.setWidth("140px");
		txtPeso.setHeight("-1px");
		absoluteLayout_4.addComponent(txtPeso, "top:98.0px;left:159.0px;");

		// txtTaxaComissao
		txtTaxaComissao = new TextField();
		txtTaxaComissao.setCaption("Taxa Comissão");
		txtTaxaComissao.setImmediate(false);
		txtTaxaComissao.setWidth("-1px");
		txtTaxaComissao.setHeight("-1px");
		absoluteLayout_4.addComponent(txtTaxaComissao,
				"top:98.0px;left:319.0px;");

		// txtPontoPedido
		txtPontoPedido = new TextField();
		txtPontoPedido.setCaption("Ponto Pedido");
		txtPontoPedido.setImmediate(false);
		txtPontoPedido.setWidth("-1px");
		txtPontoPedido.setHeight("-1px");
		absoluteLayout_4.addComponent(txtPontoPedido,
				"top:98.0px;left:479.0px;");

		// txtLoteEconomicoCompra
		txtLoteEconomicoCompra = new TextField();
		txtLoteEconomicoCompra.setCaption("Lote Econômico Compra");
		txtLoteEconomicoCompra.setImmediate(false);
		txtLoteEconomicoCompra.setWidth("-1px");
		txtLoteEconomicoCompra.setHeight("-1px");
		absoluteLayout_4.addComponent(txtLoteEconomicoCompra,
				"top:98.0px;left:639.0px;");

		// txtAliquotaIssqn
		txtAliquotaIssqn = new TextField();
		txtAliquotaIssqn.setCaption("Alíquota ISSQN");
		txtAliquotaIssqn.setImmediate(false);
		txtAliquotaIssqn.setWidth("-1px");
		txtAliquotaIssqn.setHeight("-1px");
		absoluteLayout_4.addComponent(txtAliquotaIssqn,
				"top:139.0px;left:319.0px;");

		// txtAliquotaICms
		txtAliquotaICms = new TextField();
		txtAliquotaICms.setCaption("Alíquota ICMS");
		txtAliquotaICms.setImmediate(false);
		txtAliquotaICms.setWidth("-1px");
		txtAliquotaICms.setHeight("-1px");
		absoluteLayout_4.addComponent(txtAliquotaICms,
				"top:137.0px;left:158.0px;");

		return absoluteLayout_4;
	}

}