package dc.visao.diversos;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.entidade.contabilidade.ContabilConta;
import dc.visao.framework.component.manytoonecombo.ManyToOneCombo;

public class OperadoraPlanoSaudeFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private GridLayout fields;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private TextField txtNome;

	@AutoGenerated
	private TextField txtRegistroANS;

	private ManyToOneCombo<ContabilConta> cmbContabilConta;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public OperadoraPlanoSaudeFormView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {

		// common part: create layout
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		// setHeight("100.0%");

		fields = buildFields();

		mainLayout.addComponent(fields);
	
		return mainLayout;
	}

	
	private GridLayout buildFields() {
		fields = new GridLayout();
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);
		fields.setRows(4);
		fields.setColumns(4);

		// cmbContabilConta

		cmbContabilConta = new ManyToOneCombo<ContabilConta>();
		cmbContabilConta.setCaption("Contabil Conta");
		cmbContabilConta.setImmediate(false);
		cmbContabilConta.setWidth("640px");
		cmbContabilConta.setHeight("-1px");
		cmbContabilConta.setSizeFull();
		fields.addComponent(cmbContabilConta, 0 , 0);

		// txtRegistroANS
		txtRegistroANS = new TextField();
		txtRegistroANS.setCaption("Registro ANS");
		txtRegistroANS.setImmediate(false);
		txtRegistroANS.setWidth("-1px");
		txtRegistroANS.setHeight("-1px");
		txtRegistroANS.setRequired(true);
		txtRegistroANS.setSizeFull();
		fields.addComponent(txtRegistroANS, 0, 1);

		// txtNome
		txtNome = new TextField();
		txtNome.setCaption("Nome");
		txtNome.setImmediate(false);
		txtNome.setWidth("393px");
		txtNome.setHeight("-1px");
		txtNome.setRequired(true);
		txtNome.setSizeFull();
		fields.addComponent(txtNome, 1, 1);

		return fields;
	}
	
	public GridLayout getFields() {
		return fields;
	}

	public void setFields(GridLayout fields) {
		this.fields = fields;
	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(VerticalLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}

	public TextField getTxtRegistroANS() {
		return txtRegistroANS;
	}

	public void setTxtRegistroANS(TextField txtRegistroANS) {
		this.txtRegistroANS = txtRegistroANS;
	}

	public ManyToOneCombo<ContabilConta> getCmbContabilConta() {
		return cmbContabilConta;
	}

	public void setCmbContabilConta(
			ManyToOneCombo<ContabilConta> cmbContabilConta) {
		this.cmbContabilConta = cmbContabilConta;
	}

}