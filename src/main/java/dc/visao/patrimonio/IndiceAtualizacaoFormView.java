package dc.visao.patrimonio;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.control.converter.RunField;
import dc.controller.patrimonio.IndiceAtualizacaoFormController;

/**
 * 
 * @author Gutemberg A. Da Silva
 * 
 */

public class IndiceAtualizacaoFormView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Panel panel_1;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private AbsoluteLayout absoluteLayout_1;

	@AutoGenerated
	@RunField(mappedName = "dataIndice")
	private PopupDateField pdfDataIndice;

	@AutoGenerated
	@RunField(mappedName = "valorAlternativo")
	private TextField tfValorAlternativo;

	@AutoGenerated
	@RunField(mappedName = "valor")
	private TextField tfValor;

	@AutoGenerated
	@RunField(mappedName = "nome")
	private TextField tfNome;

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private IndiceAtualizacaoFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public IndiceAtualizacaoFormView(
			final IndiceAtualizacaoFormController controller) {
		this.controller = controller;

		buildMainLayout();
		setCompositionRoot(this.mainLayout);
	}

	public PopupDateField getPdfDataIndice() {
		return pdfDataIndice;
	}

	public void setPdfDataIndice(PopupDateField pdfDataIndice) {
		this.pdfDataIndice = pdfDataIndice;
	}

	public TextField getTfNome() {
		return tfNome;
	}

	public void setTfNome(TextField tfNome) {
		this.tfNome = tfNome;
	}

	public TextField getTfValor() {
		return tfValor;
	}

	public void setTfValor(TextField tfValor) {
		this.tfValor = tfValor;
	}

	public TextField getTfValorAlternativo() {
		return tfValorAlternativo;
	}

	public void setTfValorAlternativo(TextField tfValorAlternativo) {
		this.tfValorAlternativo = tfValorAlternativo;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");

		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);

		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);

		// absoluteLayout_1
		absoluteLayout_1 = buildAbsoluteLayout_1();
		verticalLayout_2.addComponent(absoluteLayout_1);

		return verticalLayout_2;
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_1() {
		// common part: create layout
		absoluteLayout_1 = new AbsoluteLayout();
		absoluteLayout_1.setImmediate(false);
		absoluteLayout_1.setWidth("100.0%");
		absoluteLayout_1.setHeight("1300px");

		// tfNome
		tfNome = new TextField();
		tfNome.setCaption("Nome:");
		tfNome.setNullRepresentation("");
		tfNome.setImmediate(false);
		tfNome.setWidth("160px");
		tfNome.setHeight("-1px");
		tfNome.setRequired(true);
		absoluteLayout_1.addComponent(tfNome, "top:50.0px;left:22.0px;");

		// tfValor
		tfValor = new TextField();
		tfValor.setCaption("Valor:");
		tfValor.setImmediate(false);
		tfValor.setWidth("160px");
		tfValor.setHeight("-1px");
		tfValor.setRequired(true);
		absoluteLayout_1.addComponent(tfValor, "top:50.0px;left:230.0px;");

		// tfValorAlternativo
		tfValorAlternativo = new TextField();
		tfValorAlternativo.setCaption("Valor alternativo:");
		tfValorAlternativo.setImmediate(false);
		tfValorAlternativo.setWidth("160px");
		tfValorAlternativo.setHeight("-1px");
		absoluteLayout_1.addComponent(tfValorAlternativo,
				"top:100.0px;left:22.0px;");

		// pdfDataIndice
		pdfDataIndice = new PopupDateField();
		pdfDataIndice.setCaption("Data do Ã­ndice:");
		pdfDataIndice.setImmediate(false);
		pdfDataIndice.setWidth("160px");
		pdfDataIndice.setHeight("-1px");
		pdfDataIndice.setRequired(true);
		absoluteLayout_1.addComponent(pdfDataIndice,
				"top:100.0px;left:230.0px;");

		return absoluteLayout_1;
	}

}