package dc.visao.pessoal;

import java.util.ArrayList;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.pessoal.PessoaFormController;
import dc.visao.framework.util.ComponentUtil;
import dc.visao.suprimentos.NotaFiscalFormView.TIPO_OPERACAO;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;

public class PessoaFormView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout fields;

	PessoaFormController formController;
	
	TextField txtNome;
	
	ComboBox cmbTipoPessoa;
	
	TextField txtEmail;
	
	TextField txtSite;
	
	TextField txtCpf;
	PopupDateField txtNascimento;
	
	ComboBox cmbEstadoCivil,cmbRaca,cmbTipoSanguineo;
	
	TextField txtNaturalidade,txtNacionalidade,txtNomePai,txtNomeMae;
	
	TextField txtFantasia;
	
	TextField txtCNPJ;
	
	TextField txtInscricaoEstadual;
	
	TextField txtInscricaoMunicipal;
	
	PopupDateField dataConstituicao;
	
	TextField txtSuframa;
	
	ComboBox cmbTipoRegime,cmbCrt;
	
	Panel panelRG;
	
	TextField txtNumeroRG,txtEmissorRG;
	
	PopupDateField dataEmissaoRG;
	
	final Panel panelFisica = new Panel("Fisica");

	final Panel panelJuridica = new Panel("Juridica");
	

	TabSheet tabFisica;
	TabSheet tabJuridica;
	
	@AutoGenerated
	private TabSheet subForms;
	
	String FISICA = "1";
	String JURIDICA = "2";

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PessoaFormView(PessoaFormController formController) {
		this.formController = formController;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		fields = buildFields();
		mainLayout.addComponent(fields);
		
		subForms = new TabSheet();
		subForms.setWidth("100.0%");
		subForms.setHeight("100.0%");
		subForms.setSizeFull();
		subForms.setImmediate(true);
				
		buildAbaInformacoes();
		buildAbaContatos();
		buildAbaEnderecos();
			
		mainLayout.addComponent(subForms);
		mainLayout.setExpandRatio(subForms, 2);

		
	}
	
	public void buildAbaInformacoes(){
			
//		VerticalLayout l = new VerticalLayout();
//		layout.addComponent(panelFisica);
		
		subForms = new TabSheet();

		subForms.addTab(montaLayoutFisica(), "Informações do Tipo de Pessoa", null);
		
	}
		

	public void buildAbaContatos(){

		TabSheet aba = buildContatosSubForm();

		GridLayout layout = new GridLayout(1,1);
		layout.setImmediate(false);
		layout.setWidth("100.0%");
		layout.setHeight("100.0%");
		layout.setMargin(true);
		layout.setSpacing(true);
		layout.setSizeFull();
		layout.addComponent(aba);
		subForms.addTab(layout, "Contatos", null);
	}
	
	private TabSheet buildContatosSubForm() {
		// common part: create layout
		TabSheet sub = new TabSheet();
		sub.setWidth("100.0%");
		sub.setHeight("100.0%");
		sub.setSizeFull();
		sub.setImmediate(true);
		sub.addTab(null, "Contatos", null);
	    return sub;	
	}

	public void buildAbaEnderecos(){

		TabSheet aba = buildEnderecosSubForm();

		GridLayout layout = new GridLayout(1,1);
		layout.setImmediate(false);
		layout.setWidth("100.0%");
		layout.setHeight("100.0%");
		layout.setMargin(true);
		layout.setSpacing(true);
		layout.setSizeFull();
		layout.addComponent(aba);
		subForms.addTab(layout, "Endereços", null);
	}
	
	private TabSheet buildEnderecosSubForm() {
		// common part: create layout
		TabSheet sub = new TabSheet();
		sub.setWidth("100.0%");
		sub.setHeight("100.0%");
		sub.setSizeFull();
		sub.setImmediate(true);
		sub.addTab(null, "Endereços", null);
	    return sub;	
	}
	
	

	

	
	public GridLayout montaLayoutFisica(){
		GridLayout layoutFisica = new GridLayout(8, 7);
		layoutFisica.setMargin(true);
		layoutFisica.setSpacing(true);
		layoutFisica.setSizeFull();
		
		txtCpf = new TextField("CPF");
		txtNascimento = ComponentUtil.buildPopupDateField("Data Nascimento");
		cmbRaca = ComponentUtil.buildComboBox("Raça");
		cmbEstadoCivil = ComponentUtil.buildComboBox("Estado Civil");
		cmbTipoSanguineo = ComponentUtil.buildComboBox("Tipo Sanguineo");
		
		txtNaturalidade = ComponentUtil.buildTextField("Naturalidade");
		txtNacionalidade = ComponentUtil.buildTextField("Nacionalidade");
		
		txtNomePai = ComponentUtil.buildTextField("Nome do Pai");
		txtNomeMae = ComponentUtil.buildTextField("Nome da Mãe");
		
		panelRG = new Panel("RG");
		panelRG.setWidth("80.0%");
		GridLayout layoutRG = new GridLayout(8, 7);
		layoutRG.setMargin(true);
		layoutRG.setSpacing(true);
		
		txtNumeroRG  = ComponentUtil.buildTextField("Número");
		txtEmissorRG = ComponentUtil.buildTextField("Emissor");
		layoutRG.addComponent(txtNumeroRG,0,0);
		layoutRG.addComponent(txtEmissorRG,1,0);
		panelRG.setContent(layoutRG);
		
		layoutFisica.addComponent(txtCpf,0,0);
		layoutFisica.addComponent(txtNascimento,1,0);
		layoutFisica.addComponent(cmbRaca,2,0);
		layoutFisica.addComponent(cmbEstadoCivil,3,0);
		layoutFisica.addComponent(cmbTipoSanguineo,4,0);
		
		layoutFisica.addComponent(txtNaturalidade,0,1,2,1);
		layoutFisica.addComponent(txtNacionalidade,3,1,5,1);
		
		layoutFisica.addComponent(txtNomePai,0,2,2,2);
		layoutFisica.addComponent(txtNomeMae,3,2,5,2);
		
		layoutFisica.addComponent(panelRG,0,3);
		return layoutFisica;
	}
	
	public GridLayout montaLayoutJuridica(){
		GridLayout layoutJuridica = new GridLayout(8, 7);
		layoutJuridica.setMargin(true);
		layoutJuridica.setSpacing(true);
		layoutJuridica.setSizeFull();
		txtFantasia = ComponentUtil.buildTextField("Nome de Fantasia");
		layoutJuridica.addComponent(txtFantasia,0,0,5,0);
		
		txtCNPJ = ComponentUtil.buildTextField("CNPJ");
		txtInscricaoEstadual = ComponentUtil.buildTextField("Inscrição Estadual");
		txtInscricaoMunicipal = ComponentUtil.buildTextField("Inscrição Municipal");
		dataConstituicao = ComponentUtil.buildPopupDateField("Data da Constituição");
		txtSuframa = ComponentUtil.buildTextField("Suframa");
		
		layoutJuridica.addComponent(txtCNPJ,0,1);
		layoutJuridica.addComponent(txtInscricaoEstadual,1,1,2,1);
		layoutJuridica.addComponent(txtInscricaoMunicipal,3,1);
		layoutJuridica.addComponent(dataConstituicao,4,1);
		layoutJuridica.addComponent(txtSuframa,5,1);
		
		cmbTipoRegime = ComponentUtil.buildComboBox("Tipo de Regime");
		cmbCrt = ComponentUtil.buildComboBox("CRT");
		
		layoutJuridica.addComponent(cmbTipoRegime,0,2,2,2);
		layoutJuridica.addComponent(cmbCrt,3,2,4,2);
		
		return layoutJuridica;
	}
	
	@AutoGenerated
	private GridLayout buildFields() {
		// common part: create layout
		fields = new GridLayout(6, 2);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);
		
		txtNome = ComponentUtil.buildTextField("Nome");
		txtNome.setRequired(true);
		fields.addComponent(txtNome,0,0,2,0);
			
	    cmbTipoPessoa = new ComboBox("Tipo Pessoa",montaLista());
		cmbTipoPessoa.setNullSelectionAllowed(false);
		cmbTipoPessoa.setValue(cmbTipoPessoa.getItemIds().iterator().next());
		cmbTipoPessoa.setItemCaptionPropertyId("label");
    	cmbTipoPessoa.setRequired(true);
    	cmbTipoPessoa.setImmediate(true);
    	cmbTipoPessoa.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(ValueChangeEvent event) {
				TipoPessoa p = (TipoPessoa)event.getProperty().getValue();
				if(p.getCodigo().equals(FISICA)){
					mainLayout.removeComponent(subForms); 
					panelFisica.setVisible(true);
					subForms = new TabSheet();
					subForms.addTab(montaLayoutFisica(), "Informações do Tipo de Pessoa", null);
					buildAbaContatos();
					buildAbaEnderecos();
					mainLayout.addComponent(subForms);
					panelJuridica.setVisible(false);
					//montaf();
				}
				if(p.getCodigo().equals(JURIDICA)){
					mainLayout.removeComponent(subForms); 
					subForms = new TabSheet();
					subForms.addTab(montaLayoutJuridica(), "Informações do Tipo de Pessoa", null);
					buildAbaContatos();
					buildAbaEnderecos();
					mainLayout.addComponent(subForms);
					panelJuridica.setVisible(true);
					//montaJuridica();
				}
			}
		});

    	fields.addComponent(cmbTipoPessoa,3,0);
		
		txtEmail = ComponentUtil.buildTextField("Email");
		fields.addComponent(txtEmail,0,1,2,1);
		
		txtSite = ComponentUtil.buildTextField("Site");
		fields.addComponent(txtSite,3,1);
		
		
			
		return fields;
		
	}
	
	public enum TIPO_PESSOA {

		FISICA("Fisica", "1"), JURIDICA("Juridica", "2");

		private TIPO_PESSOA(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static TIPO_PESSOA getTipoOperacao(String codigo) {
			if (codigo.equals("0")) {
				return FISICA;
			}
			if (codigo.equals("1")) {
				return JURIDICA;
			} 
		return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}

	public void carregarTipoPessoa() {
		this.cmbTipoPessoa.removeAllItems();
		this.cmbTipoPessoa.addItem(TIPO_PESSOA.FISICA);
		this.cmbTipoPessoa.addItem(TIPO_PESSOA.JURIDICA);

	}
	
	public BeanItemContainer<TipoPessoa> montaLista(){
		List<TipoPessoa> lista = new ArrayList<TipoPessoa>();
		lista.add(new TipoPessoa("Fisica", "1"));
		lista.add(new TipoPessoa("Juridica", "2"));

		BeanItemContainer<TipoPessoa> objects = new BeanItemContainer(TipoPessoa.class, lista);
		return objects;
	}

	public ComboBox getCmbTipoPessoa() {
		return cmbTipoPessoa;
	}

	public void setCmbTipoPessoa(ComboBox cmbTipoPessoa) {
		this.cmbTipoPessoa = cmbTipoPessoa;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}

	public TextField getTxtEmail() {
		return txtEmail;
	}

	public void setTxtEmail(TextField txtEmail) {
		this.txtEmail = txtEmail;
	}

	public TextField getTxtSite() {
		return txtSite;
	}

	public void setTxtSite(TextField txtSite) {
		this.txtSite = txtSite;
	}
	
	


}
