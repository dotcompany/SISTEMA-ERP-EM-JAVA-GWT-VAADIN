package dc.visao.pessoal;

import java.util.ArrayList;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.pessoal.PessoaFormController;
import dc.entidade.geral.Contato;
import dc.visao.framework.component.SubFormComponent;
import dc.visao.framework.util.ComponentUtil;

public class PessoaFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout fields;

	PessoaFormController formController;

	private TextField txtNome;

	private ComboBox cmbTipoPessoa;

	private TextField txtEmail;

	private TextField txtSite;

	private TextField txtCpf;
	private PopupDateField txtNascimento;

	private ComboBox cmbEstadoCivil, cmbRaca, cmbTipoSanguineo;

	private TextField txtNaturalidade, txtNacionalidade, txtNomePai, txtNomeMae;

	private TextField txtFantasia;

	private TextField txtCNPJ;

	private TextField txtInscricaoEstadual;

	private TextField txtInscricaoMunicipal;

	private PopupDateField dataConstituicao;

	private TextField txtSuframa;

	private ComboBox cmbTipoRegime, cmbCrt;

	private Panel panelRG, panelReservista;

	private TextField txtNumeroRG, txtEmissorRG, txtOrgaoEmissor;

	private TextField txtNumeroReservista;

	private ComboBox cmbCategoriaReservista;

	private PopupDateField dataEmissaoRG;

	private OptionGroup group;

	final Panel panelFisica = new Panel("Fisica");

	final Panel panelJuridica = new Panel("Juridica");

	@AutoGenerated
	private TabSheet subForms;

	private String FISICA = "1";
	private String JURIDICA = "2";

	private SubFormComponent<Contato, Integer> contatosSubForm;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public PessoaFormView(PessoaFormController formController) {
		this.formController = formController;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		setWidth("100.0%");

		fields = buildFields();
		mainLayout.addComponent(fields);

		subForms = new TabSheet();

		buildAbaInformacoes();
		buildAbaContatos();
		buildAbaEnderecos();

		mainLayout.addComponent(subForms);
		mainLayout.setExpandRatio(subForms, 1);
	}

	public void buildAbaInformacoes() {

		subForms = new TabSheet();
		subForms.setImmediate(true);
		subForms.setSizeFull();
		subForms.addTab(montaLayoutFisica(), "Informações do Tipo de Pessoa", null);

	}

	public void buildAbaContatos() {

		subForms.addTab(buildContatosSubForm(), "Contatos", null);
	}

	// private TabSheet buildContatosSubForm() {
	// // common part: create layout
	// TabSheet sub = new TabSheet();
	// sub.setWidth("100.0%");
	// sub.setHeight("100.0%");
	// sub.setSizeFull();
	// sub.setImmediate(true);
	// sub.addTab(null, "Contatos", null);
	// return sub;
	// }

	public void buildAbaEnderecos() {

		GridLayout layout = new GridLayout(1, 1);
		layout.setImmediate(false);
		layout.setSizeFull();
		layout.setMargin(false);
		layout.setSpacing(true);

		subForms.addTab(layout, "Endereços", null);
	}

	public GridLayout montaLayoutFisica() {
		GridLayout layoutFisica = new GridLayout(8, 7);
		layoutFisica.setImmediate(false);
		layoutFisica.setWidth("100.0%");
		layoutFisica.setHeight("-1px");
		layoutFisica.setMargin(true);
		layoutFisica.setSpacing(true);

		txtCpf = new TextField("CPF");
		txtNascimento = ComponentUtil.buildPopupDateField("Data Nascimento");
		cmbRaca = ComponentUtil.buildComboBox("Raça");
		cmbEstadoCivil = ComponentUtil.buildComboBox("Estado Civil");
		cmbTipoSanguineo = ComponentUtil.buildComboBox("Tipo Sanguineo");

		txtNaturalidade = ComponentUtil.buildTextField("Naturalidade");
		txtNacionalidade = ComponentUtil.buildTextField("Nacionalidade");

		txtNomePai = ComponentUtil.buildTextField("Nome do Pai");
		txtNomeMae = ComponentUtil.buildTextField("Nome da Mãe");

		panelRG = new Panel("RG");
		panelRG.setSizeFull();
		panelRG.setWidth("400.0%");
		panelRG.setHeight("100.0%");
		GridLayout layoutRG = new GridLayout(8, 7);
		layoutRG.setImmediate(false);
		layoutRG.setWidth("100.0%");
		layoutRG.setHeight("-1px");
		layoutRG.setMargin(false);
		layoutRG.setSpacing(true);

		txtNumeroRG = ComponentUtil.buildTextField("Número");
		txtEmissorRG = ComponentUtil.buildTextField("Emissor");
		txtOrgaoEmissor = ComponentUtil.buildTextField("Órgão Emissor");
		layoutRG.addComponent(txtNumeroRG, 0, 0);
		layoutRG.addComponent(txtEmissorRG, 1, 0);
		layoutRG.addComponent(txtOrgaoEmissor, 2, 0);
		panelRG.setContent(layoutRG);

		layoutFisica.addComponent(txtCpf, 0, 0, 1, 0);
		layoutFisica.addComponent(txtNascimento, 2, 0);
		layoutFisica.addComponent(cmbRaca, 3, 0);
		layoutFisica.addComponent(cmbEstadoCivil, 4, 0);
		layoutFisica.addComponent(cmbTipoSanguineo, 5, 0);

		layoutFisica.addComponent(txtNaturalidade, 0, 1, 1, 1);
		layoutFisica.addComponent(txtNacionalidade, 2, 1, 3, 1);

		layoutFisica.addComponent(txtNomePai, 0, 2, 1, 2);
		layoutFisica.addComponent(txtNomeMae, 2, 2, 3, 2);

		layoutFisica.addComponent(panelRG, 0, 3);

		panelReservista = new Panel("Reservista");
		panelReservista.setSizeFull();
		panelReservista.setWidth("400.0%");
		panelReservista.setHeight("100.0%");

		GridLayout layoutReservista = new GridLayout(8, 7);
		layoutReservista.setImmediate(false);
		layoutReservista.setWidth("100.0%");
		layoutReservista.setHeight("-1px");
		layoutReservista.setMargin(false);
		layoutReservista.setSpacing(true);

		txtNumeroReservista = ComponentUtil.buildTextField("Número");
		cmbCategoriaReservista = ComponentUtil.buildComboBox("Categoria");
		layoutReservista.addComponent(txtNumeroReservista, 0, 0);
		layoutReservista.addComponent(cmbCategoriaReservista, 1, 0);
		panelReservista.setContent(layoutReservista);
		layoutFisica.addComponent(panelReservista, 0, 4);
		return layoutFisica;
	}

	public GridLayout montaLayoutJuridica() {
		GridLayout layoutJuridica = new GridLayout(8, 7);
		layoutJuridica.setImmediate(false);
		layoutJuridica.setWidth("100.0%");
		layoutJuridica.setHeight("-1px");
		layoutJuridica.setMargin(true);
		layoutJuridica.setSpacing(true);

		txtFantasia = ComponentUtil.buildTextField("Nome de Fantasia");
		layoutJuridica.addComponent(txtFantasia, 0, 0, 5, 0);

		txtCNPJ = ComponentUtil.buildTextField("CNPJ");
		txtInscricaoEstadual = ComponentUtil.buildTextField("Inscrição Estadual");
		txtInscricaoMunicipal = ComponentUtil.buildTextField("Inscrição Municipal");
		dataConstituicao = ComponentUtil.buildPopupDateField("Data da Constituição");
		txtSuframa = ComponentUtil.buildTextField("Suframa");

		layoutJuridica.addComponent(txtCNPJ, 0, 1);
		layoutJuridica.addComponent(txtInscricaoEstadual, 1, 1, 2, 1);
		layoutJuridica.addComponent(txtInscricaoMunicipal, 3, 1);
		layoutJuridica.addComponent(dataConstituicao, 4, 1);
		layoutJuridica.addComponent(txtSuframa, 5, 1);

		cmbTipoRegime = ComponentUtil.buildComboBox("Tipo de Regime");
		cmbCrt = ComponentUtil.buildComboBox("CRT");

		layoutJuridica.addComponent(cmbTipoRegime, 0, 2, 2, 2);
		layoutJuridica.addComponent(cmbCrt, 3, 2, 4, 2);

		return layoutJuridica;
	}

	@AutoGenerated
	private GridLayout buildFields() {
		// common part: create layout
		fields = new GridLayout(6, 3);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);

		txtNome = ComponentUtil.buildTextField("Nome");
		txtNome.setRequired(true);
		fields.addComponent(txtNome, 0, 0, 2, 0);

		cmbTipoPessoa = new ComboBox("Tipo Pessoa", montaLista());
		cmbTipoPessoa.setNullSelectionAllowed(false);
		cmbTipoPessoa.setValue(cmbTipoPessoa.getItemIds().iterator().next());
		cmbTipoPessoa.setItemCaptionPropertyId("label");
		cmbTipoPessoa.setRequired(true);
		cmbTipoPessoa.setImmediate(true);
		cmbTipoPessoa.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(ValueChangeEvent event) {
				TipoPessoa p = (TipoPessoa) event.getProperty().getValue();

				if (p.getCodigo().equals(FISICA)) {
					mainLayout.removeComponent(subForms);
					subForms = new TabSheet();
					subForms.setImmediate(true);
					subForms.setSizeFull();
					panelFisica.setVisible(true);
					subForms.addTab(montaLayoutFisica(), "Informações do Tipo de Pessoa", null);
					buildAbaContatos();
					buildAbaEnderecos();
					mainLayout.addComponent(subForms);
					mainLayout.setExpandRatio(subForms, 1);
					panelJuridica.setVisible(false);
					// montaf();
				}
				if (p.getCodigo().equals(JURIDICA)) {
					mainLayout.removeComponent(subForms);
					subForms = new TabSheet();
					subForms.setImmediate(true);
					subForms.setSizeFull();
					subForms.addTab(montaLayoutJuridica(), "Informações do Tipo de Pessoa", null);
					buildAbaContatos();
					buildAbaEnderecos();
					mainLayout.addComponent(subForms);
					mainLayout.setExpandRatio(subForms, 1);
					panelJuridica.setVisible(true);
					// montaJuridica();
				}
			}
		});

		fields.addComponent(cmbTipoPessoa, 3, 0);

		txtEmail = ComponentUtil.buildTextField("Email");
		txtEmail.setHeight("30");
		fields.addComponent(txtEmail, 0, 1, 2, 1);

		txtSite = ComponentUtil.buildTextField("Site");
		txtSite.setHeight("30");
		fields.addComponent(txtSite, 3, 1);

		group = new OptionGroup("");
		group.setMultiSelect(true);
		group.addItem("Cliente");
		group.addItem("Fornecedor");
		group.addItem("Colaborador");
		group.addItem("Convênio");
		group.addItem("Contador");
		group.addItem("Transportadora");
		group.setStyleName("v-select-optiongroup-horizontal");
		fields.addComponent(group, 0, 2, 5, 2);

		return fields;

	}

	public enum TIPO_PESSOA {

		FISICA("Fisica", "1"), JURIDICA("Juridica", "2");

		private TIPO_PESSOA(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static TIPO_PESSOA getTipoOperacao(String codigo) {
			if (codigo.equals("0")) {
				return FISICA;
			}
			if (codigo.equals("1")) {
				return JURIDICA;
			}
			return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}

	public void carregarTipoPessoa() {
		this.cmbTipoPessoa.removeAllItems();
		this.cmbTipoPessoa.addItem(TIPO_PESSOA.FISICA);
		this.cmbTipoPessoa.addItem(TIPO_PESSOA.JURIDICA);

	}

	public BeanItemContainer<TipoPessoa> montaLista() {
		List<TipoPessoa> lista = new ArrayList<TipoPessoa>();
		lista.add(new TipoPessoa("Fisica", "1"));
		lista.add(new TipoPessoa("Juridica", "2"));

		BeanItemContainer<TipoPessoa> objects = new BeanItemContainer(TipoPessoa.class, lista);
		return objects;
	}

	public ComboBox getCmbTipoPessoa() {
		return cmbTipoPessoa;
	}

	public void setCmbTipoPessoa(ComboBox cmbTipoPessoa) {
		this.cmbTipoPessoa = cmbTipoPessoa;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}

	public TextField getTxtEmail() {
		return txtEmail;
	}

	public void setTxtEmail(TextField txtEmail) {
		this.txtEmail = txtEmail;
	}

	public TextField getTxtSite() {
		return txtSite;
	}

	public void setTxtSite(TextField txtSite) {
		this.txtSite = txtSite;
	}

	private SubFormComponent buildContatosSubForm() {
		// common part: create layout

		contatosSubForm = new SubFormComponent<Contato, Integer>(Contato.class, new String[] { "nome", "email", "foneComercial", "foneResidencial",
				"foneCelular" }, new String[] { "Nome", "Email", "Fone Comercial", "Fone Residencial", "Fone Celular" }) {

			@Override
			protected TableFieldFactory getFieldFactory() {
				return new TableFieldFactory() {

					@Override
					public Field<?> createField(Container container, Object itemId, Object propertyId, Component uiContext) {

						if ("nome".equals(propertyId)) {
							TextField textField = ComponentUtil.buildTextField("Nome");
							return textField;
						}

						if ("email".equals(propertyId)) {
							TextField textField = ComponentUtil.buildTextField("Email");
							return textField;
						}

						if ("foneComercial".equals(propertyId)) {
							TextField textField = ComponentUtil.buildTextField("Fone Comercial");
							return textField;
						}

						if ("foneResidencial".equals(propertyId)) {
							TextField textField = ComponentUtil.buildTextField("Fone Residencial");
							return textField;
						}

						if ("foneCelular".equals(propertyId)) {
							TextField textField = ComponentUtil.buildTextField("Fone Celular");
							return textField;
						}
						return null;
					}
				};
			}

			protected Contato getNovo() {
				Contato detalhe = formController.novoContato();
				return detalhe;
			}

			@Override
			public boolean validateItems(List<Contato> items) {
				// TODO Auto-generated method stub
				return true;
			}

		};

		return contatosSubForm;
	}

	public TextField getTxtCpf() {
		return txtCpf;
	}

	public void setTxtCpf(TextField txtCpf) {
		this.txtCpf = txtCpf;
	}

	public PopupDateField getTxtNascimento() {
		return txtNascimento;
	}

	public void setTxtNascimento(PopupDateField txtNascimento) {
		this.txtNascimento = txtNascimento;
	}

	public ComboBox getCmbEstadoCivil() {
		return cmbEstadoCivil;
	}

	public void setCmbEstadoCivil(ComboBox cmbEstadoCivil) {
		this.cmbEstadoCivil = cmbEstadoCivil;
	}

	public ComboBox getCmbRaca() {
		return cmbRaca;
	}

	public void setCmbRaca(ComboBox cmbRaca) {
		this.cmbRaca = cmbRaca;
	}

	public ComboBox getCmbTipoSanguineo() {
		return cmbTipoSanguineo;
	}

	public void setCmbTipoSanguineo(ComboBox cmbTipoSanguineo) {
		this.cmbTipoSanguineo = cmbTipoSanguineo;
	}

	public TextField getTxtNaturalidade() {
		return txtNaturalidade;
	}

	public void setTxtNaturalidade(TextField txtNaturalidade) {
		this.txtNaturalidade = txtNaturalidade;
	}

	public TextField getTxtNacionalidade() {
		return txtNacionalidade;
	}

	public void setTxtNacionalidade(TextField txtNacionalidade) {
		this.txtNacionalidade = txtNacionalidade;
	}

	public TextField getTxtNomePai() {
		return txtNomePai;
	}

	public void setTxtNomePai(TextField txtNomePai) {
		this.txtNomePai = txtNomePai;
	}

	public TextField getTxtNomeMae() {
		return txtNomeMae;
	}

	public void setTxtNomeMae(TextField txtNomeMae) {
		this.txtNomeMae = txtNomeMae;
	}

	public TextField getTxtFantasia() {
		return txtFantasia;
	}

	public void setTxtFantasia(TextField txtFantasia) {
		this.txtFantasia = txtFantasia;
	}

	public TextField getTxtCNPJ() {
		return txtCNPJ;
	}

	public void setTxtCNPJ(TextField txtCNPJ) {
		this.txtCNPJ = txtCNPJ;
	}

	public TextField getTxtInscricaoEstadual() {
		return txtInscricaoEstadual;
	}

	public void setTxtInscricaoEstadual(TextField txtInscricaoEstadual) {
		this.txtInscricaoEstadual = txtInscricaoEstadual;
	}

	public TextField getTxtInscricaoMunicipal() {
		return txtInscricaoMunicipal;
	}

	public void setTxtInscricaoMunicipal(TextField txtInscricaoMunicipal) {
		this.txtInscricaoMunicipal = txtInscricaoMunicipal;
	}

	public PopupDateField getDataConstituicao() {
		return dataConstituicao;
	}

	public void setDataConstituicao(PopupDateField dataConstituicao) {
		this.dataConstituicao = dataConstituicao;
	}

	public TextField getTxtSuframa() {
		return txtSuframa;
	}

	public void setTxtSuframa(TextField txtSuframa) {
		this.txtSuframa = txtSuframa;
	}

	public ComboBox getCmbTipoRegime() {
		return cmbTipoRegime;
	}

	public void setCmbTipoRegime(ComboBox cmbTipoRegime) {
		this.cmbTipoRegime = cmbTipoRegime;
	}

	public ComboBox getCmbCrt() {
		return cmbCrt;
	}

	public void setCmbCrt(ComboBox cmbCrt) {
		this.cmbCrt = cmbCrt;
	}

	public TextField getTxtNumeroRG() {
		return txtNumeroRG;
	}

	public void setTxtNumeroRG(TextField txtNumeroRG) {
		this.txtNumeroRG = txtNumeroRG;
	}

	public TextField getTxtEmissorRG() {
		return txtEmissorRG;
	}

	public void setTxtEmissorRG(TextField txtEmissorRG) {
		this.txtEmissorRG = txtEmissorRG;
	}

	public TextField getTxtOrgaoEmissor() {
		return txtOrgaoEmissor;
	}

	public void setTxtOrgaoEmissor(TextField txtOrgaoEmissor) {
		this.txtOrgaoEmissor = txtOrgaoEmissor;
	}

	public TextField getTxtNumeroReservista() {
		return txtNumeroReservista;
	}

	public void setTxtNumeroReservista(TextField txtNumeroReservista) {
		this.txtNumeroReservista = txtNumeroReservista;
	}

	public ComboBox getCmbCategoriaReservista() {
		return cmbCategoriaReservista;
	}

	public void setCmbCategoriaReservista(ComboBox cmbCategoriaReservista) {
		this.cmbCategoriaReservista = cmbCategoriaReservista;
	}

	public PopupDateField getDataEmissaoRG() {
		return dataEmissaoRG;
	}

	public void setDataEmissaoRG(PopupDateField dataEmissaoRG) {
		this.dataEmissaoRG = dataEmissaoRG;
	}

	public OptionGroup getGroup() {
		return group;
	}

	public void setGroup(OptionGroup group) {
		this.group = group;
	}

}