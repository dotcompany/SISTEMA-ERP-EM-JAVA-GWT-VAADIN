package dc.visao.financeiro;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

import dc.visao.framework.util.ComponentUtil;

/**
*
* @author Wesley Jr
/*
 * Nessa classe temos a Tela (DESIGN), onde criamos o campos que a Tela cont�m
 * tudo que ela precisa ter
 *
*/

public class PlanoNaturezaFinanceiraFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontal_layout_1;
	@AutoGenerated
	private PopupDateField dtInclusao;
	@AutoGenerated
	private TextField txtNiveis;
	@AutoGenerated
	private TextField txtMascara;
	@AutoGenerated
	private TextField txtNome;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PlanoNaturezaFinanceiraFormView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		mainLayout.setRows(5);
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// txtNome
		txtNome = ComponentUtil.buildTextField("Nome");
		txtNome.setWidth("-1px");
		txtNome.setHeight("-1px");
		mainLayout.addComponent(txtNome,0,0);
		
		//Horizontal layout
		horizontal_layout_1 = buildHorizontal_layout_1();
		mainLayout.addComponent(horizontal_layout_1,0,1);
		
		// dtInclusao
		dtInclusao = new PopupDateField();
		dtInclusao.setCaption("Data Inclusão");
		dtInclusao.setImmediate(false);
		dtInclusao.setWidth("-1px");
		dtInclusao.setHeight("-1px");
		mainLayout.addComponent(dtInclusao, 0,2);
			
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontal_layout_1() {
		// common part: create layout
		horizontal_layout_1 = new HorizontalLayout();
		horizontal_layout_1.setImmediate(false);
		horizontal_layout_1.setWidth("-1px");
		horizontal_layout_1.setHeight("100.0%");
		horizontal_layout_1.setMargin(false);
		horizontal_layout_1.setSpacing(true);
		
		// txtMascara
		txtMascara = ComponentUtil.buildTextField("Máscara");
		horizontal_layout_1.addComponent(txtMascara);
		
		// txtNiveis
		txtNiveis = ComponentUtil.buildNumberField("Níveis");
		horizontal_layout_1.addComponent(txtNiveis);
		
		return horizontal_layout_1;
	}
	public PopupDateField getDtInclusao() {
		return dtInclusao;
	}

	public void setDtInclusao(PopupDateField dtInclusao) {
		this.dtInclusao = dtInclusao;
	}

	public TextField getTxtNiveis() {
		return txtNiveis;
	}

	public void setTxtNiveis(TextField txtNiveis) {
		this.txtNiveis = txtNiveis;
	}

	public TextField getTxtMascara() {
		return txtMascara;
	}

	public void setTxtMascara(TextField txtMascara) {
		this.txtMascara = txtMascara;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}
	
}
