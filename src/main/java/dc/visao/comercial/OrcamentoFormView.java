package dc.visao.comercial;


import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.comercial.OrcamentoFormController;
import dc.visao.framework.util.ComponentUtil;
import dc.visao.suprimentos.ContagemEstoqueFormController;

public class OrcamentoFormView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	OrcamentoFormController controller;

	@AutoGenerated
	private GridLayout fields;
	
	ComboBox cmbVendedor,cmbCliente,cmbTransportadora,
	cmbCondicaoPagamento,cmbTipo,cmbFrete;
	
	TextField txtCodigo;
	
	PopupDateField dataCadastro,dataEntrega,dataValidade;
	
	TextField txtValorSubTotal,txtValorFrete,txtTaxaComissao,txtValorComissao,txtTaxaDesconto,
	txtValorDesconto,txtValorTotal;
	
	TextArea txtDescricao;

	public OrcamentoFormView(OrcamentoFormController controller) {
		this.controller = controller;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		fields = buildFields();
		mainLayout.addComponent(fields);
		
		return mainLayout;

	}

	@AutoGenerated
	private GridLayout buildFields() {
		// common part: create layout
		fields = new GridLayout(7, 7);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);
		
		cmbVendedor = ComponentUtil.buildComboBox("Vendedor");
		fields.addComponent(cmbVendedor,0,0);
		
		cmbCliente = ComponentUtil.buildComboBox("Cliente");
		fields.addComponent(cmbCliente,1,0);
		
		cmbTransportadora = ComponentUtil.buildComboBox("Transportadora");
		fields.addComponent(cmbTransportadora,2,0);
		
		cmbCondicaoPagamento = ComponentUtil.buildComboBox("Condição Pagamento");
		fields.addComponent(cmbCondicaoPagamento,3,0);
		
		cmbTipo = ComponentUtil.buildComboBox("Tipo");
		fields.addComponent(cmbTipo,0,2);
		
		cmbFrete = ComponentUtil.buildComboBox("Frete");
		fields.addComponent(cmbFrete,1,2);
		
		txtCodigo = ComponentUtil.buildTextField("Código");
         fields.addComponent(txtCodigo,2,2);	
         
         dataCadastro = ComponentUtil.buildPopupDateField("Data Cadastro");
         fields.addComponent(dataCadastro,3,2);
         
         dataEntrega = ComponentUtil.buildPopupDateField("Data Entrega");
         fields.addComponent(dataEntrega,4,2);
         
         dataValidade = ComponentUtil.buildPopupDateField("Data Validade");
         fields.addComponent(dataValidade,5,2);
		
         txtValorSubTotal  = ComponentUtil.buildTextField("Valor SubTotal");
         fields.addComponent(txtValorSubTotal,0,3);
         
         txtValorFrete = ComponentUtil.buildTextField("Valor Frete");
         fields.addComponent(txtValorFrete,1,3);
		
         txtTaxaComissao = ComponentUtil.buildTextField("Taxa Comissão");
         fields.addComponent(txtTaxaComissao,2,3);
         
         txtValorComissao = ComponentUtil.buildTextField("Valor Comissão");
         fields.addComponent(txtValorComissao,3,3);
         
         txtTaxaDesconto = ComponentUtil.buildTextField("Taxa Desconto");
         fields.addComponent(txtTaxaDesconto,4,3);
         
         txtValorDesconto = ComponentUtil.buildTextField("Valor Desconto");
         fields.addComponent(txtValorDesconto,5,3);
         
         txtValorTotal = ComponentUtil.buildTextField("Valor Total");
         fields.addComponent(txtValorTotal,6,3);
         
         txtDescricao = ComponentUtil.buildTextArea("Descrição");
         fields.addComponent(txtDescricao,0,4,6,4);
         
		return fields;
			
	}

		
	
}
