package dc.visao.comercial;

import org.vaadin.addons.maskedtextfield.MaskedTextField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.comercial.FreteFormController;
import dc.visao.framework.util.ComponentUtil;

public class FreteFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	FreteFormController controller;

	@AutoGenerated
	private GridLayout fields;

	ComboBox cmbTransportadora, cmbVenda;

	TextArea txtDescricao;

	TextField txtConhecimento, txtResponsavel;

	MaskedTextField txtPlaca, txtUfPlaca;

	TextField txtSeloFiscal, txtQuantidadeVolumes, txtMarcaVolume,
			txtEspecieVolume, txtPesoBruto, txtPesoLiquido;

	public FreteFormView(FreteFormController controller) {
		this.controller = controller;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		setHeight("100%");

		mainLayout.addComponent(buildFields());

		return mainLayout;

	}

	@AutoGenerated
	private GridLayout buildFields() {
		// common part: create layout
		fields = new GridLayout(6, 6);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(true);
		fields.setSpacing(true);

		cmbTransportadora = ComponentUtil.buildComboBox("Transportadora");
		cmbTransportadora.setContainerDataSource(controller
				.carregarTransportadoras());
		fields.addComponent(cmbTransportadora, 0, 0);

		cmbVenda = ComponentUtil.buildComboBox("ID Venda");
		cmbVenda.setContainerDataSource(controller.carregarVendas());
		cmbVenda.setRequired(true);
		fields.addComponent(cmbVenda, 1, 0);

		txtConhecimento = ComponentUtil.buildNumericField("Conhecimento");
		fields.addComponent(txtConhecimento, 2, 0);

		txtResponsavel = ComponentUtil.buildTextField("Responsável");
		txtResponsavel.setMaxLength(1);
		fields.addComponent(txtResponsavel, 3, 0);

		txtPlaca = ComponentUtil.buildMaskedTextField("Placa", "UUU-####");
		txtPlaca.setWidth("250");
		fields.addComponent(txtPlaca, 4, 0);

		txtUfPlaca = ComponentUtil.buildMaskedTextField("UF Placa", "??");
		txtUfPlaca.setWidth("80");
		fields.addComponent(txtUfPlaca, 5, 0);

		txtSeloFiscal = ComponentUtil.buildNumericField("Selo Fiscal");
		fields.addComponent(txtSeloFiscal, 0, 1);

		txtQuantidadeVolumes = ComponentUtil.buildNumberField("Qtde. Volumes");
		fields.addComponent(txtQuantidadeVolumes, 1, 1);

		txtMarcaVolume = ComponentUtil.buildTextField("Marca Volume");
		fields.addComponent(txtMarcaVolume, 2, 1, 3, 1);

		txtEspecieVolume = ComponentUtil.buildTextField("Espécie Volume");
		txtEspecieVolume.setWidth("250");
		fields.addComponent(txtEspecieVolume, 4, 1);

		txtPesoBruto = ComponentUtil.buildNumberField("Peso Bruto");
		fields.addComponent(txtPesoBruto, 0, 2, 1, 2);

		txtPesoLiquido = ComponentUtil.buildNumberField("Peso Liquido");
		fields.addComponent(txtPesoLiquido, 2, 2, 3, 2);

		return fields;

	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(VerticalLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public FreteFormController getController() {
		return controller;
	}

	public void setController(FreteFormController controller) {
		this.controller = controller;
	}

	public GridLayout getFields() {
		return fields;
	}

	public void setFields(GridLayout fields) {
		this.fields = fields;
	}

	public ComboBox getCmbTransportadora() {
		return cmbTransportadora;
	}

	public void setCmbTransportadora(ComboBox cmbTransportadora) {
		this.cmbTransportadora = cmbTransportadora;
	}

	public ComboBox getCmbVenda() {
		return cmbVenda;
	}

	public void setCmbVenda(ComboBox cmbVenda) {
		this.cmbVenda = cmbVenda;
	}

	public TextArea getTxtDescricao() {
		return txtDescricao;
	}

	public void setTxtDescricao(TextArea txtDescricao) {
		this.txtDescricao = txtDescricao;
	}

	public TextField getTxtConhecimento() {
		return txtConhecimento;
	}

	public void setTxtConhecimento(TextField txtConhecimento) {
		this.txtConhecimento = txtConhecimento;
	}

	public TextField getTxtResponsavel() {
		return txtResponsavel;
	}

	public void setTxtResponsavel(TextField txtResponsavel) {
		this.txtResponsavel = txtResponsavel;
	}

	public MaskedTextField getTxtPlaca() {
		return txtPlaca;
	}

	public void setTxtPlaca(MaskedTextField txtPlaca) {
		this.txtPlaca = txtPlaca;
	}

	public MaskedTextField getTxtUfPlaca() {
		return txtUfPlaca;
	}

	public void setTxtUfPlaca(MaskedTextField txtUfPlaca) {
		this.txtUfPlaca = txtUfPlaca;
	}

	public TextField getTxtSeloFiscal() {
		return txtSeloFiscal;
	}

	public void setTxtSeloFiscal(TextField txtSeloFiscal) {
		this.txtSeloFiscal = txtSeloFiscal;
	}

	public TextField getTxtQuantidadeVolumes() {
		return txtQuantidadeVolumes;
	}

	public void setTxtQuantidadeVolumes(TextField txtQuantidadeVolumes) {
		this.txtQuantidadeVolumes = txtQuantidadeVolumes;
	}

	public TextField getTxtMarcaVolume() {
		return txtMarcaVolume;
	}

	public void setTxtMarcaVolume(TextField txtMarcaVolume) {
		this.txtMarcaVolume = txtMarcaVolume;
	}

	public TextField getTxtPesoBruto() {
		return txtPesoBruto;
	}

	public void setTxtPesoBruto(TextField txtPesoBruto) {
		this.txtPesoBruto = txtPesoBruto;
	}

	public TextField getTxtPesoLiquido() {
		return txtPesoLiquido;
	}

	public void setTxtPesoLiquido(TextField txtPesoLiquido) {
		this.txtPesoLiquido = txtPesoLiquido;
	}

	public TextField getTxtEspecieVolume() {
		return txtEspecieVolume;
	}

	public void setTxtEspecieVolume(TextField txtEspecieVolume) {
		this.txtEspecieVolume = txtEspecieVolume;
	}

}